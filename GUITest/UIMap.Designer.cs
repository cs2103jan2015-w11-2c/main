// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace GUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// "on"
        /// </summary>
        public void AddMethod1()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinWindow uIPictureBoxWindow = this.UIMagicMemoWindow.UIMagicMemoClient.UIPictureBoxWindow;
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            WinEdit uITodayTaskBoxEdit = this.UIMagicMemoWindow.UITodayTaskBoxWindow.UITodayTaskBoxEdit;
            #endregion

            // Last mouse action was not recorded.

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.AddMethod1Params.UICommandInputBoxEditText;

            // Type '{Back}{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.AddMethod1Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add task1 on 27/4/2015 19:0' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.AddMethod1Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.AddMethod1Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'add task2 on 22/4/2015 10 to 3p' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.AddMethod1Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.AddMethod1Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add task3 on next sunday 3p to 4:32p' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.AddMethod1Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.AddMethod1Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'add task4 on 2/5 3pm to 5:30pm' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.AddMethod1Params.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.AddMethod1Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Click 'pictureBox' window
            Mouse.Click(uIPictureBoxWindow, new Point(560, 240));

            // Click 'allTaskBox' text box
            Mouse.Click(uIAllTaskBoxEdit, new Point(157, 216));

            // Click 'todayTaskBox' text box
            Mouse.Click(uITodayTaskBoxEdit, new Point(44, 194));

            // Click 'todayTaskBox' text box
            Mouse.Click(uITodayTaskBoxEdit, new Point(44, 194));
        }
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Tuesday, 14 Apr 2015            //2. task1            //3. [6p-7p] task2            //Sunday, 19 Apr 2015            //4. [7-9p] task3            //            //'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AddMethod2 - Use 'AddMethod2Params' to pass parameters into this method.
        /// </summary>
        public void AddMethod2()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            #endregion

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.AddMethod2Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.AddMethod2Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add task1 from 21/4 10 to 25/4 3pm' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.AddMethod2Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.AddMethod2Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add task2 from next sat to next sun 12p' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.AddMethod2Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.AddMethod2Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);
        }
        
        /// <summary>
        /// AddMethod3 - Use 'AddMethod3Params' to pass parameters into this method.
        /// </summary>
        public void AddMethod3()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            #endregion

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.AddMethod3Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.AddMethod3Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add task1 by 4/5/2015 11:59pm' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.AddMethod3Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.AddMethod3Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add task2 by next sunday 1pm' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.AddMethod3Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.AddMethod3Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add task3 by 24/4/2015 11 ' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.AddMethod3Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.AddMethod3Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);
        }
        
        /// <summary>
        /// DeleteMethod1 - Use 'DeleteMethod1Params' to pass parameters into this method.
        /// </summary>
        public void DeleteMethod1()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit7 = this.UIMagicMemoWindow.UICommandInputBoxWindow7.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit8 = this.UIMagicMemoWindow.UICommandInputBoxWindow8.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit9 = this.UIMagicMemoWindow.UICommandInputBoxWindow9.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit10 = this.UIMagicMemoWindow.UICommandInputBoxWindow10.UICommandInputBoxEdit;
            #endregion

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.DeleteMethod1Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.DeleteMethod1Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add task1 on 2/5 16' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.DeleteMethod1Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.DeleteMethod1Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Last mouse action was not recorded.

            // Last mouse action was not recorded.

            // Type 'add task2 on 4/5/2015 7 to 3pm' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.DeleteMethod1Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.DeleteMethod1Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add task3 from 3/5 to 8/5 11' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.DeleteMethod1Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.DeleteMethod1Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'add task4 by next sun 16' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.DeleteMethod1Params.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.DeleteMethod1Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'add task5 by 7/6 12p' in 'commandInputBox' text box
            uICommandInputBoxEdit5.Text = this.DeleteMethod1Params.UICommandInputBoxEditText5;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.DeleteMethod1Params.UICommandInputBoxEditSendKeys5, ModifierKeys.None);

            // Type 'delete 1{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.DeleteMethod1Params.UICommandInputBoxEditSendKeys6, ModifierKeys.None);

            // Type 'd 1 4{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit7, this.DeleteMethod1Params.UICommandInputBoxEditSendKeys7, ModifierKeys.None);

            // Type 'add task6 on 9/5 12' in 'commandInputBox' text box
            uICommandInputBoxEdit8.Text = this.DeleteMethod1Params.UICommandInputBoxEditText6;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit8, this.DeleteMethod1Params.UICommandInputBoxEditSendKeys8, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'add task7 from 3/6 to 9/6 19' in 'commandInputBox' text box
            uICommandInputBoxEdit9.Text = this.DeleteMethod1Params.UICommandInputBoxEditText7;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit9, this.DeleteMethod1Params.UICommandInputBoxEditSendKeys9, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'delete 1-4' in 'commandInputBox' text box
            uICommandInputBoxEdit10.Text = this.DeleteMethod1Params.UICommandInputBoxEditText8;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit10, this.DeleteMethod1Params.UICommandInputBoxEditSendKeys10, ModifierKeys.None);
        }
        
        /// <summary>
        /// EditMethod1 - Use 'EditMethod1Params' to pass parameters into this method.
        /// </summary>
        public void EditMethod1()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            #endregion

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.EditMethod1Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.EditMethod1Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add have lunch on 23/4 11 to 13' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.EditMethod1Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.EditMethod1Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add project meeting 4/5 12' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.EditMethod1Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.EditMethod1Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Last mouse action was not recorded.

            // Type 'add firt paper on 25/4 7p' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.EditMethod1Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.EditMethod1Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'edit 3 first paper on 25/4 7 to 9:30' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.EditMethod1Params.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.EditMethod1Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'add vacation on 9/5 1' in 'commandInputBox' text box
            uICommandInputBoxEdit5.Text = this.EditMethod1Params.UICommandInputBoxEditText5;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.EditMethod1Params.UICommandInputBoxEditSendKeys5, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'edit 1 project meeting on 6/5 12' in 'commandInputBox' text box
            uICommandInputBoxEdit6.Text = this.EditMethod1Params.UICommandInputBoxEditText6;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.EditMethod1Params.UICommandInputBoxEditSendKeys6, ModifierKeys.None);
        }
        
        /// <summary>
        /// trash1 - Use 'trash1Params' to pass parameters into this method.
        /// </summary>
        public void trash1()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            #endregion

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.trash1Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.trash1Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add task1 on 5/6 12' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.trash1Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.trash1Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add task 2 on 5/6 7 to 7:30' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.trash1Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.trash1Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add task3 on 5/6 9 to 11' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.trash1Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.trash1Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'add task4 on 5/6 13 to2pm' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.trash1Params.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.trash1Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);
        }
        
        /// <summary>
        /// UndoMethod1 - Use 'UndoMethod1Params' to pass parameters into this method.
        /// </summary>
        public void UndoMethod1()
        {
            #region Variable Declarations
            WinWindow uICommandInputBoxWindow = this.UIMagicMemoWindow.UIMagicMemoClient.UICommandInputBoxWindow;
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            #endregion

            // Click 'commandInputBox' window
            Mouse.Click(uICommandInputBoxWindow, new Point(439, 25));

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.UndoMethod1Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.UndoMethod1Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'add task 1meaningless on 12/5 12p to 12:46' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.UndoMethod1Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.UndoMethod1Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add task2 meaningless on 3/7 11 ' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.UndoMethod1Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.UndoMethod1Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add task3 meaningless by 19/5 11:59p' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.UndoMethod1Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.UndoMethod1Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'undo' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.UndoMethod1Params.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.UndoMethod1Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'undo' in 'commandInputBox' text box
            uICommandInputBoxEdit5.Text = this.UndoMethod1Params.UICommandInputBoxEditText5;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.UndoMethod1Params.UICommandInputBoxEditSendKeys5, ModifierKeys.None);

            // Type 'undo' in 'commandInputBox' text box
            uICommandInputBoxEdit6.Text = this.UndoMethod1Params.UICommandInputBoxEditText6;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.UndoMethod1Params.UICommandInputBoxEditSendKeys6, ModifierKeys.None);
        }
        
        /// <summary>
        /// mutiple undos
        /// </summary>
        public void UndoMethod2()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit7 = this.UIMagicMemoWindow.UICommandInputBoxWindow7.UICommandInputBoxEdit;
            #endregion

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.UndoMethod2Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.UndoMethod2Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add task1 on friday 11 ' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.UndoMethod2Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.UndoMethod2Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add task2 from monday to 19/4' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.UndoMethod2Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.UndoMethod2Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add task3 from tues to friday' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.UndoMethod2Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.UndoMethod2Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'add task4 by next saturday 23:59' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.UndoMethod2Params.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.UndoMethod2Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'undo ' in 'commandInputBox' text box
            uICommandInputBoxEdit5.Text = this.UndoMethod2Params.UICommandInputBoxEditText5;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.UndoMethod2Params.UICommandInputBoxEditSendKeys5, ModifierKeys.None);

            // Type 'undo{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.UndoMethod2Params.UICommandInputBoxEditSendKeys6, ModifierKeys.None);

            // Type 'undo{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit7, this.UndoMethod2Params.UICommandInputBoxEditSendKeys7, ModifierKeys.None);
        }
        
        /// <summary>
        /// AssertUndoMethod2 - Use 'AssertUndoMethod2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertUndoMethod2()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Friday, 17 Apr 2015            //1. [11-12p] task1            //            //'
            Assert.AreEqual(this.AssertUndoMethod2ExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// RedoMethod1 - Use 'RedoMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RedoMethod1()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit7 = this.UIMagicMemoWindow.UICommandInputBoxWindow7.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit8 = this.UIMagicMemoWindow.UICommandInputBoxWindow8.UICommandInputBoxEdit;
            #endregion

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.RedoMethod1Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.RedoMethod1Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add task1 on 7/7 12p' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.RedoMethod1Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.RedoMethod1Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add task2 on 19/5 3pm to 8p' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.RedoMethod1Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.RedoMethod1Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add task3 on 4/5 12' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.RedoMethod1Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.RedoMethod1Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'add task4 by 7/5 12p' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.RedoMethod1Params.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.RedoMethod1Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'undo{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.RedoMethod1Params.UICommandInputBoxEditSendKeys5, ModifierKeys.None);

            // Type 'u{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.RedoMethod1Params.UICommandInputBoxEditSendKeys6, ModifierKeys.None);

            // Type 'r{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit7, this.RedoMethod1Params.UICommandInputBoxEditSendKeys7, ModifierKeys.None);

            // Type 'redo{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit8, this.RedoMethod1Params.UICommandInputBoxEditSendKeys8, ModifierKeys.None);
        }
        
        /// <summary>
        /// RedoMethod2 - Use 'RedoMethod2Params' to pass parameters into this method.
        /// </summary>
        public void RedoMethod2()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit7 = this.UIMagicMemoWindow.UICommandInputBoxWindow7.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit8 = this.UIMagicMemoWindow.UICommandInputBoxWindow8.UICommandInputBoxEdit;
            #endregion

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.RedoMethod2Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.RedoMethod2Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add task1 by friday 18' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.RedoMethod2Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.RedoMethod2Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add task2 by sunday 23:59' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.RedoMethod2Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.RedoMethod2Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add task3 on next thurs 12:0' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.RedoMethod2Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.RedoMethod2Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'add task4 from next monday to 25/4 19' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.RedoMethod2Params.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.RedoMethod2Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'undo' in 'commandInputBox' text box
            uICommandInputBoxEdit5.Text = this.RedoMethod2Params.UICommandInputBoxEditText5;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.RedoMethod2Params.UICommandInputBoxEditSendKeys5, ModifierKeys.None);

            // Type 'undo{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.RedoMethod2Params.UICommandInputBoxEditSendKeys6, ModifierKeys.None);

            // Type 'undo{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit7, this.RedoMethod2Params.UICommandInputBoxEditSendKeys7, ModifierKeys.None);

            // Type 'redo{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit8, this.RedoMethod2Params.UICommandInputBoxEditSendKeys8, ModifierKeys.None);
        }
        
        /// <summary>
        /// ClearMethod1 - Use 'ClearMethod1Params' to pass parameters into this method.
        /// </summary>
        public void ClearMethod1()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            #endregion

            // Last mouse action was not recorded.

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.ClearMethod1Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.ClearMethod1Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add task1 on 4/5 12' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.ClearMethod1Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.ClearMethod1Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'add task2 by 7/5 12p' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.ClearMethod1Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.ClearMethod1Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add task3 from 5/5 6p to6/5 7p' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.ClearMethod1Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.ClearMethod1Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'add task4 from 4/5 to 9/5 12p' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.ClearMethod1Params.UICommandInputBoxEditText4;

            // Type '{Left}{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.ClearMethod1Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'l{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.ClearMethod1Params.UICommandInputBoxEditSendKeys5, ModifierKeys.None);
        }
        
        /// <summary>
        /// SearchMethod1 - Use 'SearchMethod1Params' to pass parameters into this method.
        /// </summary>
        public void SearchMethod1()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit7 = this.UIMagicMemoWindow.UICommandInputBoxWindow7.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit8 = this.UIMagicMemoWindow.UICommandInputBoxWindow8.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit9 = this.UIMagicMemoWindow.UICommandInputBoxWindow9.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit10 = this.UIMagicMemoWindow.UICommandInputBoxWindow10.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit11 = this.UIMagicMemoWindow.UICommandInputBoxWindow11.UICommandInputBoxEdit;
            #endregion

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.SearchMethod1Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.SearchMethod1Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add basketball with friends on 8/5 12 to 14:00' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.SearchMethod1Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.SearchMethod1Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add group meeting on 11/5 12' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.SearchMethod1Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.SearchMethod1Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add meet ann at school on 17/5 10' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.SearchMethod1Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.SearchMethod1Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'add prepare for exam from 19/4 to 28/4 12p' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.SearchMethod1Params.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.SearchMethod1Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'search school' in 'commandInputBox' text box
            uICommandInputBoxEdit5.Text = this.SearchMethod1Params.UICommandInputBoxEditText5;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.SearchMethod1Params.UICommandInputBoxEditSendKeys5, ModifierKeys.None);

            // Type 'display' in 'commandInputBox' text box
            uICommandInputBoxEdit6.Text = this.SearchMethod1Params.UICommandInputBoxEditText6;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.SearchMethod1Params.UICommandInputBoxEditSendKeys6, ModifierKeys.None);

            // Type 'search meet' in 'commandInputBox' text box
            uICommandInputBoxEdit7.Text = this.SearchMethod1Params.UICommandInputBoxEditText7;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit7, this.SearchMethod1Params.UICommandInputBoxEditSendKeys7, ModifierKeys.None);

            // Type 'display' in 'commandInputBox' text box
            uICommandInputBoxEdit8.Text = this.SearchMethod1Params.UICommandInputBoxEditText8;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit8, this.SearchMethod1Params.UICommandInputBoxEditSendKeys8, ModifierKeys.None);

            // Type 'search for with at' in 'commandInputBox' text box
            uICommandInputBoxEdit9.Text = this.SearchMethod1Params.UICommandInputBoxEditText9;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit9, this.SearchMethod1Params.UICommandInputBoxEditSendKeys9, ModifierKeys.None);

            // Type 'display' in 'commandInputBox' text box
            uICommandInputBoxEdit10.Text = this.SearchMethod1Params.UICommandInputBoxEditText10;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit10, this.SearchMethod1Params.UICommandInputBoxEditSendKeys10, ModifierKeys.None);

            // Type 'search nn' in 'commandInputBox' text box
            uICommandInputBoxEdit11.Text = this.SearchMethod1Params.UICommandInputBoxEditText11;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit11, this.SearchMethod1Params.UICommandInputBoxEditSendKeys11, ModifierKeys.None);
        }
        
        /// <summary>
        /// SerchMethod2 - Use 'SerchMethod2Params' to pass parameters into this method.
        /// </summary>
        public void SerchMethod2()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            #endregion

            // Type 'display' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.SerchMethod2Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.SerchMethod2Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add clean the room on 17/5 13 to 4p' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.SerchMethod2Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.SerchMethod2Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add finish report by 5/5 11:59pm' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.SerchMethod2Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.SerchMethod2Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type '{Left}{Left}{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.SerchMethod2Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'display ' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.SerchMethod2Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.SerchMethod2Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'search 17/5' in 'commandInputBox' text box
            uICommandInputBoxEdit6.Text = this.SerchMethod2Params.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.SerchMethod2Params.UICommandInputBoxEditSendKeys5, ModifierKeys.None);
        }
        
        /// <summary>
        /// InvalidDeleteMethod - Use 'InvalidDeleteMethodParams' to pass parameters into this method.
        /// </summary>
        public void InvalidDeleteMethod()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinText uISearchresultsforaText = this.UIMagicMemoWindow.UIDeletedlinenumbers12Window.UISearchresultsforaText;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            #endregion

            // Last mouse action was not recorded.

            // Type 'cl' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.InvalidDeleteMethodParams.UICommandInputBoxEditText;

            // Click 'Search results for: "a"' label
            Mouse.Click(uISearchresultsforaText, new Point(422, 23));

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.InvalidDeleteMethodParams.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.InvalidDeleteMethodParams.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add do laundry on fri 13 to 14:10' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.InvalidDeleteMethodParams.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.InvalidDeleteMethodParams.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add meeting with group mates on next wed 19' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.InvalidDeleteMethodParams.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.InvalidDeleteMethodParams.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add clear bill by next friday 12' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.InvalidDeleteMethodParams.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.InvalidDeleteMethodParams.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'add prepare for exam from 19/4 to 29/4' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.InvalidDeleteMethodParams.UICommandInputBoxEditText5;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.InvalidDeleteMethodParams.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'search g w' in 'commandInputBox' text box
            uICommandInputBoxEdit5.Text = this.InvalidDeleteMethodParams.UICommandInputBoxEditText6;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.InvalidDeleteMethodParams.UICommandInputBoxEditSendKeys5, ModifierKeys.None);
        }
        
        /// <summary>
        /// InvalidSearchMethod - Use 'InvalidSearchMethodParams' to pass parameters into this method.
        /// </summary>
        public void InvalidSearchMethod()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit7 = this.UIMagicMemoWindow.UICommandInputBoxWindow7.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit8 = this.UIMagicMemoWindow.UICommandInputBoxWindow8.UICommandInputBoxEdit;
            #endregion

            // Type 'add task1 on 6/7 17 to 18' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.InvalidSearchMethodParams.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.InvalidSearchMethodParams.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Last mouse action was not recorded.

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.InvalidSearchMethodParams.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.InvalidSearchMethodParams.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add task1 on 7/6 17 to 18' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.InvalidSearchMethodParams.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.InvalidSearchMethodParams.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add meeting with friends on next sun 11 to 19' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.InvalidSearchMethodParams.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.InvalidSearchMethodParams.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'add study for exam by 19/4 12p' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.InvalidSearchMethodParams.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.InvalidSearchMethodParams.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'search y f' in 'commandInputBox' text box
            uICommandInputBoxEdit5.Text = this.InvalidSearchMethodParams.UICommandInputBoxEditText5;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.InvalidSearchMethodParams.UICommandInputBoxEditSendKeys5, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'display' in 'commandInputBox' text box
            uICommandInputBoxEdit6.Text = this.InvalidSearchMethodParams.UICommandInputBoxEditText6;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.InvalidSearchMethodParams.UICommandInputBoxEditSendKeys6, ModifierKeys.None);

            // Type 'search shdiaonsun' in 'commandInputBox' text box
            uICommandInputBoxEdit7.Text = this.InvalidSearchMethodParams.UICommandInputBoxEditText7;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit7, this.InvalidSearchMethodParams.UICommandInputBoxEditSendKeys7, ModifierKeys.None);

            // Type 'display' in 'commandInputBox' text box
            uICommandInputBoxEdit8.Text = this.InvalidSearchMethodParams.UICommandInputBoxEditText8;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit8, this.InvalidSearchMethodParams.UICommandInputBoxEditSendKeys8, ModifierKeys.None);
        }
        
        /// <summary>
        /// AssertTwelveHrMethod - Use 'AssertTwelveHrMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertTwelveHrMethod()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Thursday, 16 Apr 2015            //1. [10:35p-11:35p] task2            //Friday, 17 Apr 2015            //2. [6:04-7:32p] task1            //Monday, 20 Apr 2015            //3. [0-25] task3            //            //'
            Assert.AreEqual(this.AssertTwelveHrMethodExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// TwentyfourHrMethod - Use 'TwentyfourHrMethodParams' to pass parameters into this method.
        /// </summary>
        public void TwentyfourHrMethod()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit7 = this.UIMagicMemoWindow.UICommandInputBoxWindow7.UICommandInputBoxEdit;
            #endregion

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.TwentyfourHrMethodParams.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.TwentyfourHrMethodParams.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'add task1 on 23' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.TwentyfourHrMethodParams.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.TwentyfourHrMethodParams.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'add task1 on 7/5 13' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.TwentyfourHrMethodParams.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.TwentyfourHrMethodParams.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'add task2 on 4/6 19 to 19:30' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.TwentyfourHrMethodParams.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.TwentyfourHrMethodParams.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'add tsk3 by 7/5 24:59' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.TwentyfourHrMethodParams.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.TwentyfourHrMethodParams.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'add task5 by 8/5 0' in 'commandInputBox' text box
            uICommandInputBoxEdit5.Text = this.TwentyfourHrMethodParams.UICommandInputBoxEditText5;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.TwentyfourHrMethodParams.UICommandInputBoxEditSendKeys5, ModifierKeys.None);

            // Type 'add task5 by 7/5 19:0' in 'commandInputBox' text box
            uICommandInputBoxEdit6.Text = this.TwentyfourHrMethodParams.UICommandInputBoxEditText6;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.TwentyfourHrMethodParams.UICommandInputBoxEditSendKeys6, ModifierKeys.None);

            // Type 'delete 1' in 'commandInputBox' text box
            uICommandInputBoxEdit7.Text = this.TwentyfourHrMethodParams.UICommandInputBoxEditText7;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit7, this.TwentyfourHrMethodParams.UICommandInputBoxEditSendKeys7, ModifierKeys.None);
        }
        
        /// <summary>
        /// FreeSlotMethod - Use 'FreeSlotMethodParams' to pass parameters into this method.
        /// </summary>
        public void FreeSlotMethod()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit7 = this.UIMagicMemoWindow.UICommandInputBoxWindow7.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit8 = this.UIMagicMemoWindow.UICommandInputBoxWindow8.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit9 = this.UIMagicMemoWindow.UICommandInputBoxWindow9.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit10 = this.UIMagicMemoWindow.UICommandInputBoxWindow10.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit11 = this.UIMagicMemoWindow.UICommandInputBoxWindow11.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit12 = this.UIMagicMemoWindow.UICommandInputBoxWindow12.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit13 = this.UIMagicMemoWindow.UICommandInputBoxWindow13.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit14 = this.UIMagicMemoWindow.UICommandInputBoxWindow14.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit15 = this.UIMagicMemoWindow.UICommandInputBoxWindow15.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit16 = this.UIMagicMemoWindow.UICommandInputBoxWindow16.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit17 = this.UIMagicMemoWindow.UICommandInputBoxWindow17.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit18 = this.UIMagicMemoWindow.UICommandInputBoxWindow18.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit19 = this.UIMagicMemoWindow.UICommandInputBoxWindow19.UICommandInputBoxEdit;
            #endregion

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add task1 on 5/5 7 to 8' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add task2 on 5/5 8:30 to 9' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add task3 on 5/5 10 to 12:00' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'add task4 on 5/5 14 to 14:30' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'add task5 5:30pm to 6pm' in 'commandInputBox' text box
            uICommandInputBoxEdit5.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText5;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys5, ModifierKeys.None);

            // Type 'add task5 on 5/5 5:30p to 6pm' in 'commandInputBox' text box
            uICommandInputBoxEdit6.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText6;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys6, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'add task6 on 5/5 10p to 11:30pm' in 'commandInputBox' text box
            uICommandInputBoxEdit7.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText7;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit7, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys7, ModifierKeys.None);

            // Type 'free 1 5/5' in 'commandInputBox' text box
            uICommandInputBoxEdit8.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText8;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit8, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys8, ModifierKeys.None);

            // Type 'free 3 5/5' in 'commandInputBox' text box
            uICommandInputBoxEdit9.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText9;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit9, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys9, ModifierKeys.None);

            // Type 'free 4 5/5' in 'commandInputBox' text box
            uICommandInputBoxEdit10.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText10;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit10, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys10, ModifierKeys.None);

            // The control for this action was not recorded.

            // The control for this action was not recorded.

            // Type 'free 5 5/5' in 'commandInputBox' text box
            uICommandInputBoxEdit11.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText11;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit11, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys11, ModifierKeys.None);

            // Type 'display' in 'commandInputBox' text box
            uICommandInputBoxEdit12.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText12;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit12, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys12, ModifierKeys.None);

            // Type 'delete 6 7' in 'commandInputBox' text box
            uICommandInputBoxEdit13.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText13;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit13, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys13, ModifierKeys.None);

            // Type 'free 6 5/5' in 'commandInputBox' text box
            uICommandInputBoxEdit14.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText14;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit14, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys14, ModifierKeys.None);

            // Type 'display' in 'commandInputBox' text box
            uICommandInputBoxEdit15.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText15;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit15, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys15, ModifierKeys.None);

            // Type 'delete 1 2 3 ' in 'commandInputBox' text box
            uICommandInputBoxEdit16.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText16;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit16, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys16, ModifierKeys.None);

            // Type 'add task5 on 5/5 3pm to 12p' in 'commandInputBox' text box
            uICommandInputBoxEdit17.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText17;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit17, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys17, ModifierKeys.None);

            // Type 'free 2 5/5' in 'commandInputBox' text box
            uICommandInputBoxEdit18.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText18;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit18, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys18, ModifierKeys.None);

            // Type 'display' in 'commandInputBox' text box
            uICommandInputBoxEdit19.Text = this.FreeSlotMethodParams.UICommandInputBoxEditText19;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit19, this.FreeSlotMethodParams.UICommandInputBoxEditSendKeys19, ModifierKeys.None);
        }
        
        /// <summary>
        /// trashi2 - Use 'trashi2Params' to pass parameters into this method.
        /// </summary>
        public void trashi2()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uITodayTaskBoxEdit = this.UIMagicMemoWindow.UITodayTaskBoxWindow.UITodayTaskBoxEdit;
            WinText uINotificationtimechanText = this.UIMagicMemoWindow.UIDeletedlinenumbers12Window.UINotificationtimechanText;
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            #endregion

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.trashi2Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.trashi2Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type '' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.trashi2Params.UICommandInputBoxEditText1;

            // Type '{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.trashi2Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Last mouse action was not recorded.

            // Type 'add task on today 21:54' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.trashi2Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.trashi2Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'reminder 1' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.trashi2Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.trashi2Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Click 'todayTaskBox' text box
            Mouse.Click(uITodayTaskBoxEdit, new Point(157, 177));

            // Click 'Notification time changed from 1 minute(s) to 1 mi...' label
            Mouse.Click(uINotificationtimechanText, new Point(191, 20));

            // Click 'allTaskBox' text box
            Mouse.Click(uIAllTaskBoxEdit, new Point(37, 153));

            // Click 'commandInputBox' text box
            Mouse.Click(uICommandInputBoxEdit3, new Point(166, 14));
        }
        
        /// <summary>
        /// trash2 - Use 'trash2Params' to pass parameters into this method.
        /// </summary>
        public void trash2()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinClient uIMagicMemoClient = this.UIMagicMemoWindow.UIMagicMemoClient;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            #endregion

            // Type 'clear' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.trash2Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.trash2Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add task by ' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.trash2Params.UICommandInputBoxEditText1;

            // Click 'Magic Memo' client
            Mouse.Click(uIMagicMemoClient, new Point(436, 445));

            // Type 'add task by 12:57' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.trash2Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.trash2Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'reminder 1' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.trash2Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.trash2Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'notify' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.trash2Params.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.trash2Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'notify{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.trash2Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);
        }
        
        /// <summary>
        /// trash3 - Use 'trash3Params' to pass parameters into this method.
        /// </summary>
        public void trash3()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            #endregion

            // Type 'cleat' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.trash3Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.trash3Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Click 'commandInputBox' text box
            Mouse.Click(uICommandInputBoxEdit1, new Point(379, 13));

            // Type 'clear{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.trash3Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add task1 on monday 10 to 12' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.trash3Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.trash3Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'add task2 on monday 13 to 13:30' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.trash3Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.trash3Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'add task3 on monday 14:30 to 167' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.trash3Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.trash3Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);
        }
        
        /// <summary>
        /// AssertAddMethod1 - Use 'AssertAddMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertAddMethod1()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Wednesday, 22 Apr 2015            //1. [10-3p] task2            //Sunday, 26 Apr 2015            //2. [3p-4:32p] task3            //Monday, 27 Apr 2015            //3. [7p-8p] task1            //Saturday, 2 May 2015            //4. [3p-5:30p] task4            //            //'
            Assert.AreEqual(this.AssertAddMethod1ExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertAddMethod2 - Use 'AssertAddMethod2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertAddMethod2()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Tuesday, 21 Apr 2015            //1. [10-3p, 25/4] task1            //Saturday, 25 Apr 2015            //2. [12p-1p, 26/4] task2            //            //'
            Assert.AreEqual(this.AssertAddMethod2ExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertAddMethod3 - Use 'AssertAddMethod3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertAddMethod3()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Deadline Events            //1. [11][24/4] task3            //2. [1p][26/4] task2            //3. [11:59p][4/5] task1            //            //'
            Assert.AreEqual(this.AssertAddMethod3ExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// InvalidAddMethod1 - Use 'InvalidAddMethod1Params' to pass parameters into this method.
        /// </summary>
        public void InvalidAddMethod1()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit7 = this.UIMagicMemoWindow.UICommandInputBoxWindow7.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit8 = this.UIMagicMemoWindow.UICommandInputBoxWindow8.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit9 = this.UIMagicMemoWindow.UICommandInputBoxWindow9.UICommandInputBoxEdit;
            WinText uIInvalidnumberspecifiText = this.UIMagicMemoWindow.UIDeletedlinenumbers12Window.UIInvalidnumberspecifiText;
            WinText uIInvalidnumberspecifiText1 = this.UIMagicMemoWindow.UIDeletedlinenumbers12Window.UIInvalidnumberspecifiText1;
            #endregion

            // Type 'delete 100' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.InvalidAddMethod1Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.InvalidAddMethod1Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add task1 by 7/' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.InvalidAddMethod1Params.UICommandInputBoxEditText1;

            // Type 'add task1 by 7/5' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.InvalidAddMethod1Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.InvalidAddMethod1Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.InvalidAddMethod1Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'd{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.InvalidAddMethod1Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'add task4 from 7/5 4p to 17/5 ' in 'commandInputBox' text box
            uICommandInputBoxEdit5.Text = this.InvalidAddMethod1Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.InvalidAddMethod1Params.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'delete 100' in 'commandInputBox' text box
            uICommandInputBoxEdit6.Text = this.InvalidAddMethod1Params.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.InvalidAddMethod1Params.UICommandInputBoxEditSendKeys5, ModifierKeys.None);

            // Type 'delete 1 to100' in 'commandInputBox' text box
            uICommandInputBoxEdit7.Text = this.InvalidAddMethod1Params.UICommandInputBoxEditText5;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit7, this.InvalidAddMethod1Params.UICommandInputBoxEditSendKeys6, ModifierKeys.None);

            // Type 'delete 1to100' in 'commandInputBox' text box
            uICommandInputBoxEdit8.Text = this.InvalidAddMethod1Params.UICommandInputBoxEditText6;

            // Type '{Left}{Left}{Left}{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit8, this.InvalidAddMethod1Params.UICommandInputBoxEditSendKeys7, ModifierKeys.None);

            // The control for this action was not recorded.

            // Type 'delete all' in 'commandInputBox' text box
            uICommandInputBoxEdit9.Text = this.InvalidAddMethod1Params.UICommandInputBoxEditText7;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit9, this.InvalidAddMethod1Params.UICommandInputBoxEditSendKeys8, ModifierKeys.None);

            // Click 'Invalid number specified!' label
            Mouse.Click(uIInvalidnumberspecifiText, new Point(204, 11));

            // Double-Click 'Invalid number specified!' label
            Mouse.DoubleClick(uIInvalidnumberspecifiText1, new Point(203, 11));
        }
        
        /// <summary>
        /// AssertInvalidAddMethod1 - Use 'AssertInvalidAddMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertInvalidAddMethod1()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Floating            //1. task next monday            //2. task2 at 25/5/2015            //Friday, 19 Jun 2015            //3. task3            //            //'
            Assert.AreEqual(this.AssertInvalidAddMethod1ExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertDeleteMethod1 - Use 'AssertDeleteMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertDeleteMethod1()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals '            //'
            Assert.AreEqual(this.AssertDeleteMethod1ExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertClearMethod1 - Use 'AssertClearMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertClearMethod1()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals '            //'
            Assert.AreEqual(this.AssertClearMethod1ExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertEditMethod1 - Use 'AssertEditMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertEditMethod1()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Thursday, 23 Apr 2015            //1. [11-1p] have lunch            //Saturday, 25 Apr 2015            //2. [7-9] first paper            //Wednesday, 6 May 2015            //3. [12p-1p] project meeting            //Saturday, 9 May 2015            //4. [1:09-2:09] vacation            //            //'
            Assert.AreEqual(this.AssertEditMethod1ExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertInvalidDeleteMethod - Use 'AssertInvalidDeleteMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertInvalidDeleteMethod()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Deadline Events            //2. [11p][6/7] task2            //Sunday, 17 May 2015            //1. [12p-1p] task3            //            //'
            Assert.AreEqual(this.AssertInvalidDeleteMethodExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertInvalidSearchMethod - Use 'AssertInvalidSearchMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertInvalidSearchMethod()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Deadline Events            //1. [12p][19/4] study for exam            //Sunday, 26 Apr 2015            //2. [11-7p] meeting with friends            //Sunday, 7 Jun 2015            //3. [5p-6p] task1            //            //'
            Assert.AreEqual(this.AssertInvalidSearchMethodExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertRedoMethod2 - Use 'AssertRedoMethod2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertRedoMethod2()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Deadline Events            //2. [12p][7/5] task4            //Monday, 4 May 2015            //1. [12p-1p] task3            //Tuesday, 19 May 2015            //3. [3p-8p] task2            //Tuesday, 7 Jul 2015            //4. [12p-1p] task1            //            //'
            Assert.AreEqual(this.AssertRedoMethod2ExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertSearchMethod1 - Use 'AssertSearchMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertSearchMethod1()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Sunday, 17 May 2015            //4. [10-11] meet ann at school            //            //'
            Assert.AreEqual(this.AssertSearchMethod1ExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertSearchMethod2 - Use 'AssertSearchMethod2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertSearchMethod2()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Sunday, 17 May 2015            //5. [10-11] meet ann at school            //6. [1p-4p] clean the room            //            //'
            Assert.AreEqual(this.AssertSearchMethod2ExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// TwelveHrMethod - Use 'TwelveHrMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void TwelveHrMethod()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Deadline Events            //5. [2p][7/7] task2            //Sunday, 26 Apr 2015            //1. [12p-1p] task4            //Monday, 4 May 2015            //2. [12:30p-1:30p] task5            //Tuesday, 5 May 2015            //3. [3p-4p] task1            //Thursday, 7 May 2015            //4. [7:09-7p] task3            //            //'
            Assert.AreEqual(this.TwelveHrMethodExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertTwentyfourHrMethod - Use 'AssertTwentyfourHrMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertTwentyfourHrMethod()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Deadline Events            //3. [7p][7/5] task5            //4. [0:59][7/5] tsk3            //Thursday, 7 May 2015            //2. [1p-2p] task1            //Thursday, 4 Jun 2015            //5. [7p-7:30p] task2            //            //'
            Assert.AreEqual(this.AssertTwentyfourHrMethodExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertUndoMethod1 - Use 'AssertUndoMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertUndoMethod1()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals '            //'
            Assert.AreEqual(this.AssertUndoMethod1ExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertFreeSlotMethod - Use 'AssertFreeSlotMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertFreeSlotMethod()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Tuesday, 5 May 2015            //1. [10-12p] task3            //2. [2p-2:30p] task4            //3. [3p-4p] task5            //            //'
            Assert.AreEqual(this.AssertFreeSlotMethodExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        #region Properties
        public virtual AddMethod1Params AddMethod1Params
        {
            get
            {
                if ((this.mAddMethod1Params == null))
                {
                    this.mAddMethod1Params = new AddMethod1Params();
                }
                return this.mAddMethod1Params;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual AddMethod2Params AddMethod2Params
        {
            get
            {
                if ((this.mAddMethod2Params == null))
                {
                    this.mAddMethod2Params = new AddMethod2Params();
                }
                return this.mAddMethod2Params;
            }
        }
        
        public virtual AddMethod3Params AddMethod3Params
        {
            get
            {
                if ((this.mAddMethod3Params == null))
                {
                    this.mAddMethod3Params = new AddMethod3Params();
                }
                return this.mAddMethod3Params;
            }
        }
        
        public virtual DeleteMethod1Params DeleteMethod1Params
        {
            get
            {
                if ((this.mDeleteMethod1Params == null))
                {
                    this.mDeleteMethod1Params = new DeleteMethod1Params();
                }
                return this.mDeleteMethod1Params;
            }
        }
        
        public virtual EditMethod1Params EditMethod1Params
        {
            get
            {
                if ((this.mEditMethod1Params == null))
                {
                    this.mEditMethod1Params = new EditMethod1Params();
                }
                return this.mEditMethod1Params;
            }
        }
        
        public virtual trash1Params trash1Params
        {
            get
            {
                if ((this.mtrash1Params == null))
                {
                    this.mtrash1Params = new trash1Params();
                }
                return this.mtrash1Params;
            }
        }
        
        public virtual UndoMethod1Params UndoMethod1Params
        {
            get
            {
                if ((this.mUndoMethod1Params == null))
                {
                    this.mUndoMethod1Params = new UndoMethod1Params();
                }
                return this.mUndoMethod1Params;
            }
        }
        
        public virtual UndoMethod2Params UndoMethod2Params
        {
            get
            {
                if ((this.mUndoMethod2Params == null))
                {
                    this.mUndoMethod2Params = new UndoMethod2Params();
                }
                return this.mUndoMethod2Params;
            }
        }
        
        public virtual AssertUndoMethod2ExpectedValues AssertUndoMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertUndoMethod2ExpectedValues == null))
                {
                    this.mAssertUndoMethod2ExpectedValues = new AssertUndoMethod2ExpectedValues();
                }
                return this.mAssertUndoMethod2ExpectedValues;
            }
        }
        
        public virtual RedoMethod1Params RedoMethod1Params
        {
            get
            {
                if ((this.mRedoMethod1Params == null))
                {
                    this.mRedoMethod1Params = new RedoMethod1Params();
                }
                return this.mRedoMethod1Params;
            }
        }
        
        public virtual RedoMethod2Params RedoMethod2Params
        {
            get
            {
                if ((this.mRedoMethod2Params == null))
                {
                    this.mRedoMethod2Params = new RedoMethod2Params();
                }
                return this.mRedoMethod2Params;
            }
        }
        
        public virtual ClearMethod1Params ClearMethod1Params
        {
            get
            {
                if ((this.mClearMethod1Params == null))
                {
                    this.mClearMethod1Params = new ClearMethod1Params();
                }
                return this.mClearMethod1Params;
            }
        }
        
        public virtual SearchMethod1Params SearchMethod1Params
        {
            get
            {
                if ((this.mSearchMethod1Params == null))
                {
                    this.mSearchMethod1Params = new SearchMethod1Params();
                }
                return this.mSearchMethod1Params;
            }
        }
        
        public virtual SerchMethod2Params SerchMethod2Params
        {
            get
            {
                if ((this.mSerchMethod2Params == null))
                {
                    this.mSerchMethod2Params = new SerchMethod2Params();
                }
                return this.mSerchMethod2Params;
            }
        }
        
        public virtual InvalidDeleteMethodParams InvalidDeleteMethodParams
        {
            get
            {
                if ((this.mInvalidDeleteMethodParams == null))
                {
                    this.mInvalidDeleteMethodParams = new InvalidDeleteMethodParams();
                }
                return this.mInvalidDeleteMethodParams;
            }
        }
        
        public virtual InvalidSearchMethodParams InvalidSearchMethodParams
        {
            get
            {
                if ((this.mInvalidSearchMethodParams == null))
                {
                    this.mInvalidSearchMethodParams = new InvalidSearchMethodParams();
                }
                return this.mInvalidSearchMethodParams;
            }
        }
        
        public virtual AssertTwelveHrMethodExpectedValues AssertTwelveHrMethodExpectedValues
        {
            get
            {
                if ((this.mAssertTwelveHrMethodExpectedValues == null))
                {
                    this.mAssertTwelveHrMethodExpectedValues = new AssertTwelveHrMethodExpectedValues();
                }
                return this.mAssertTwelveHrMethodExpectedValues;
            }
        }
        
        public virtual TwentyfourHrMethodParams TwentyfourHrMethodParams
        {
            get
            {
                if ((this.mTwentyfourHrMethodParams == null))
                {
                    this.mTwentyfourHrMethodParams = new TwentyfourHrMethodParams();
                }
                return this.mTwentyfourHrMethodParams;
            }
        }
        
        public virtual FreeSlotMethodParams FreeSlotMethodParams
        {
            get
            {
                if ((this.mFreeSlotMethodParams == null))
                {
                    this.mFreeSlotMethodParams = new FreeSlotMethodParams();
                }
                return this.mFreeSlotMethodParams;
            }
        }
        
        public virtual trashi2Params trashi2Params
        {
            get
            {
                if ((this.mtrashi2Params == null))
                {
                    this.mtrashi2Params = new trashi2Params();
                }
                return this.mtrashi2Params;
            }
        }
        
        public virtual trash2Params trash2Params
        {
            get
            {
                if ((this.mtrash2Params == null))
                {
                    this.mtrash2Params = new trash2Params();
                }
                return this.mtrash2Params;
            }
        }
        
        public virtual trash3Params trash3Params
        {
            get
            {
                if ((this.mtrash3Params == null))
                {
                    this.mtrash3Params = new trash3Params();
                }
                return this.mtrash3Params;
            }
        }
        
        public virtual AssertAddMethod1ExpectedValues AssertAddMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertAddMethod1ExpectedValues == null))
                {
                    this.mAssertAddMethod1ExpectedValues = new AssertAddMethod1ExpectedValues();
                }
                return this.mAssertAddMethod1ExpectedValues;
            }
        }
        
        public virtual AssertAddMethod2ExpectedValues AssertAddMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertAddMethod2ExpectedValues == null))
                {
                    this.mAssertAddMethod2ExpectedValues = new AssertAddMethod2ExpectedValues();
                }
                return this.mAssertAddMethod2ExpectedValues;
            }
        }
        
        public virtual AssertAddMethod3ExpectedValues AssertAddMethod3ExpectedValues
        {
            get
            {
                if ((this.mAssertAddMethod3ExpectedValues == null))
                {
                    this.mAssertAddMethod3ExpectedValues = new AssertAddMethod3ExpectedValues();
                }
                return this.mAssertAddMethod3ExpectedValues;
            }
        }
        
        public virtual InvalidAddMethod1Params InvalidAddMethod1Params
        {
            get
            {
                if ((this.mInvalidAddMethod1Params == null))
                {
                    this.mInvalidAddMethod1Params = new InvalidAddMethod1Params();
                }
                return this.mInvalidAddMethod1Params;
            }
        }
        
        public virtual AssertInvalidAddMethod1ExpectedValues AssertInvalidAddMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertInvalidAddMethod1ExpectedValues == null))
                {
                    this.mAssertInvalidAddMethod1ExpectedValues = new AssertInvalidAddMethod1ExpectedValues();
                }
                return this.mAssertInvalidAddMethod1ExpectedValues;
            }
        }
        
        public virtual AssertDeleteMethod1ExpectedValues AssertDeleteMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertDeleteMethod1ExpectedValues == null))
                {
                    this.mAssertDeleteMethod1ExpectedValues = new AssertDeleteMethod1ExpectedValues();
                }
                return this.mAssertDeleteMethod1ExpectedValues;
            }
        }
        
        public virtual AssertClearMethod1ExpectedValues AssertClearMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertClearMethod1ExpectedValues == null))
                {
                    this.mAssertClearMethod1ExpectedValues = new AssertClearMethod1ExpectedValues();
                }
                return this.mAssertClearMethod1ExpectedValues;
            }
        }
        
        public virtual AssertEditMethod1ExpectedValues AssertEditMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertEditMethod1ExpectedValues == null))
                {
                    this.mAssertEditMethod1ExpectedValues = new AssertEditMethod1ExpectedValues();
                }
                return this.mAssertEditMethod1ExpectedValues;
            }
        }
        
        public virtual AssertInvalidDeleteMethodExpectedValues AssertInvalidDeleteMethodExpectedValues
        {
            get
            {
                if ((this.mAssertInvalidDeleteMethodExpectedValues == null))
                {
                    this.mAssertInvalidDeleteMethodExpectedValues = new AssertInvalidDeleteMethodExpectedValues();
                }
                return this.mAssertInvalidDeleteMethodExpectedValues;
            }
        }
        
        public virtual AssertInvalidSearchMethodExpectedValues AssertInvalidSearchMethodExpectedValues
        {
            get
            {
                if ((this.mAssertInvalidSearchMethodExpectedValues == null))
                {
                    this.mAssertInvalidSearchMethodExpectedValues = new AssertInvalidSearchMethodExpectedValues();
                }
                return this.mAssertInvalidSearchMethodExpectedValues;
            }
        }
        
        public virtual AssertRedoMethod2ExpectedValues AssertRedoMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertRedoMethod2ExpectedValues == null))
                {
                    this.mAssertRedoMethod2ExpectedValues = new AssertRedoMethod2ExpectedValues();
                }
                return this.mAssertRedoMethod2ExpectedValues;
            }
        }
        
        public virtual AssertSearchMethod1ExpectedValues AssertSearchMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertSearchMethod1ExpectedValues == null))
                {
                    this.mAssertSearchMethod1ExpectedValues = new AssertSearchMethod1ExpectedValues();
                }
                return this.mAssertSearchMethod1ExpectedValues;
            }
        }
        
        public virtual AssertSearchMethod2ExpectedValues AssertSearchMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertSearchMethod2ExpectedValues == null))
                {
                    this.mAssertSearchMethod2ExpectedValues = new AssertSearchMethod2ExpectedValues();
                }
                return this.mAssertSearchMethod2ExpectedValues;
            }
        }
        
        public virtual TwelveHrMethodExpectedValues TwelveHrMethodExpectedValues
        {
            get
            {
                if ((this.mTwelveHrMethodExpectedValues == null))
                {
                    this.mTwelveHrMethodExpectedValues = new TwelveHrMethodExpectedValues();
                }
                return this.mTwelveHrMethodExpectedValues;
            }
        }
        
        public virtual AssertTwentyfourHrMethodExpectedValues AssertTwentyfourHrMethodExpectedValues
        {
            get
            {
                if ((this.mAssertTwentyfourHrMethodExpectedValues == null))
                {
                    this.mAssertTwentyfourHrMethodExpectedValues = new AssertTwentyfourHrMethodExpectedValues();
                }
                return this.mAssertTwentyfourHrMethodExpectedValues;
            }
        }
        
        public virtual AssertUndoMethod1ExpectedValues AssertUndoMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertUndoMethod1ExpectedValues == null))
                {
                    this.mAssertUndoMethod1ExpectedValues = new AssertUndoMethod1ExpectedValues();
                }
                return this.mAssertUndoMethod1ExpectedValues;
            }
        }
        
        public virtual AssertFreeSlotMethodExpectedValues AssertFreeSlotMethodExpectedValues
        {
            get
            {
                if ((this.mAssertFreeSlotMethodExpectedValues == null))
                {
                    this.mAssertFreeSlotMethodExpectedValues = new AssertFreeSlotMethodExpectedValues();
                }
                return this.mAssertFreeSlotMethodExpectedValues;
            }
        }
        
        public UIMagicMemoWindow UIMagicMemoWindow
        {
            get
            {
                if ((this.mUIMagicMemoWindow == null))
                {
                    this.mUIMagicMemoWindow = new UIMagicMemoWindow();
                }
                return this.mUIMagicMemoWindow;
            }
        }
        
        public UIMagicMemoWindow1 UIMagicMemoWindow1
        {
            get
            {
                if ((this.mUIMagicMemoWindow1 == null))
                {
                    this.mUIMagicMemoWindow1 = new UIMagicMemoWindow1();
                }
                return this.mUIMagicMemoWindow1;
            }
        }
        
        public UIMicrosoftVisualCRuntWindow UIMicrosoftVisualCRuntWindow
        {
            get
            {
                if ((this.mUIMicrosoftVisualCRuntWindow == null))
                {
                    this.mUIMicrosoftVisualCRuntWindow = new UIMicrosoftVisualCRuntWindow();
                }
                return this.mUIMicrosoftVisualCRuntWindow;
            }
        }
        
        public UIMainControllerTestcpWindow UIMainControllerTestcpWindow
        {
            get
            {
                if ((this.mUIMainControllerTestcpWindow == null))
                {
                    this.mUIMainControllerTestcpWindow = new UIMainControllerTestcpWindow();
                }
                return this.mUIMainControllerTestcpWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddMethod1Params mAddMethod1Params;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private AddMethod2Params mAddMethod2Params;
        
        private AddMethod3Params mAddMethod3Params;
        
        private DeleteMethod1Params mDeleteMethod1Params;
        
        private EditMethod1Params mEditMethod1Params;
        
        private trash1Params mtrash1Params;
        
        private UndoMethod1Params mUndoMethod1Params;
        
        private UndoMethod2Params mUndoMethod2Params;
        
        private AssertUndoMethod2ExpectedValues mAssertUndoMethod2ExpectedValues;
        
        private RedoMethod1Params mRedoMethod1Params;
        
        private RedoMethod2Params mRedoMethod2Params;
        
        private ClearMethod1Params mClearMethod1Params;
        
        private SearchMethod1Params mSearchMethod1Params;
        
        private SerchMethod2Params mSerchMethod2Params;
        
        private InvalidDeleteMethodParams mInvalidDeleteMethodParams;
        
        private InvalidSearchMethodParams mInvalidSearchMethodParams;
        
        private AssertTwelveHrMethodExpectedValues mAssertTwelveHrMethodExpectedValues;
        
        private TwentyfourHrMethodParams mTwentyfourHrMethodParams;
        
        private FreeSlotMethodParams mFreeSlotMethodParams;
        
        private trashi2Params mtrashi2Params;
        
        private trash2Params mtrash2Params;
        
        private trash3Params mtrash3Params;
        
        private AssertAddMethod1ExpectedValues mAssertAddMethod1ExpectedValues;
        
        private AssertAddMethod2ExpectedValues mAssertAddMethod2ExpectedValues;
        
        private AssertAddMethod3ExpectedValues mAssertAddMethod3ExpectedValues;
        
        private InvalidAddMethod1Params mInvalidAddMethod1Params;
        
        private AssertInvalidAddMethod1ExpectedValues mAssertInvalidAddMethod1ExpectedValues;
        
        private AssertDeleteMethod1ExpectedValues mAssertDeleteMethod1ExpectedValues;
        
        private AssertClearMethod1ExpectedValues mAssertClearMethod1ExpectedValues;
        
        private AssertEditMethod1ExpectedValues mAssertEditMethod1ExpectedValues;
        
        private AssertInvalidDeleteMethodExpectedValues mAssertInvalidDeleteMethodExpectedValues;
        
        private AssertInvalidSearchMethodExpectedValues mAssertInvalidSearchMethodExpectedValues;
        
        private AssertRedoMethod2ExpectedValues mAssertRedoMethod2ExpectedValues;
        
        private AssertSearchMethod1ExpectedValues mAssertSearchMethod1ExpectedValues;
        
        private AssertSearchMethod2ExpectedValues mAssertSearchMethod2ExpectedValues;
        
        private TwelveHrMethodExpectedValues mTwelveHrMethodExpectedValues;
        
        private AssertTwentyfourHrMethodExpectedValues mAssertTwentyfourHrMethodExpectedValues;
        
        private AssertUndoMethod1ExpectedValues mAssertUndoMethod1ExpectedValues;
        
        private AssertFreeSlotMethodExpectedValues mAssertFreeSlotMethodExpectedValues;
        
        private UIMagicMemoWindow mUIMagicMemoWindow;
        
        private UIMagicMemoWindow1 mUIMagicMemoWindow1;
        
        private UIMicrosoftVisualCRuntWindow mUIMicrosoftVisualCRuntWindow;
        
        private UIMainControllerTestcpWindow mUIMainControllerTestcpWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AddMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Back}{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Back}{Enter}";
        
        /// <summary>
        /// Type 'add task1 on 27/4/2015 19:0' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task1 on 27/4/2015 19:0";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add task2 on 22/4/2015 10 to 3p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task2 on 22/4/2015 10 to 3p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add task3 on next sunday 3p to 4:32p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add task3 on next sunday 3p to 4:32p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add task4 on 2/5 3pm to 5:30pm' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add task4 on 2/5 3pm to 5:30pm";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Tuesday, 14 Apr 2015        ///2. task1        ///3. [6p-7p] task2        ///Sunday, 19 Apr 2015        ///4. [7-9p] task3        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Tuesday, 14 Apr 2015\r2. task1\r3. [6p-7p] task2\rSunday, 19 Apr 2015\r4. [7-9p] task" +
            "3\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AddMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add task1 from 21/4 10 to 25/4 3pm' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task1 from 21/4 10 to 25/4 3pm";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add task2 from next sat to next sun 12p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task2 from next sat to next sun 12p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddMethod3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AddMethod3Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add task1 by 4/5/2015 11:59pm' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task1 by 4/5/2015 11:59pm";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add task2 by next sunday 1pm' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task2 by next sunday 1pm";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add task3 by 24/4/2015 11 ' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add task3 by 24/4/2015 11 ";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DeleteMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class DeleteMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add task1 on 2/5 16' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task1 on 2/5 16";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add task2 on 4/5/2015 7 to 3pm' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task2 on 4/5/2015 7 to 3pm";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add task3 from 3/5 to 8/5 11' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add task3 from 3/5 to 8/5 11";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add task4 by next sun 16' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add task4 by next sun 16";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'add task5 by 7/6 12p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText5 = "add task5 by 7/6 12p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'delete 1{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys6 = "delete 1{Enter}";
        
        /// <summary>
        /// Type 'd 1 4{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys7 = "d 1 4{Enter}";
        
        /// <summary>
        /// Type 'add task6 on 9/5 12' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText6 = "add task6 on 9/5 12";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys8 = "{Enter}";
        
        /// <summary>
        /// Type 'add task7 from 3/6 to 9/6 19' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText7 = "add task7 from 3/6 to 9/6 19";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys9 = "{Enter}";
        
        /// <summary>
        /// Type 'delete 1-4' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText8 = "delete 1-4";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys10 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class EditMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add have lunch on 23/4 11 to 13' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add have lunch on 23/4 11 to 13";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add project meeting 4/5 12' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add project meeting 4/5 12";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add firt paper on 25/4 7p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add firt paper on 25/4 7p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'edit 3 first paper on 25/4 7 to 9:30' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "edit 3 first paper on 25/4 7 to 9:30";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'add vacation on 9/5 1' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText5 = "add vacation on 9/5 1";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'edit 1 project meeting on 6/5 12' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText6 = "edit 1 project meeting on 6/5 12";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys6 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'trash1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class trash1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add task1 on 5/6 12' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task1 on 5/6 12";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add task 2 on 5/6 7 to 7:30' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task 2 on 5/6 7 to 7:30";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add task3 on 5/6 9 to 11' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add task3 on 5/6 9 to 11";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add task4 on 5/6 13 to2pm' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add task4 on 5/6 13 to2pm";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UndoMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UndoMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add task 1meaningless on 12/5 12p to 12:46' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task 1meaningless on 12/5 12p to 12:46";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add task2 meaningless on 3/7 11 ' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task2 meaningless on 3/7 11 ";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add task3 meaningless by 19/5 11:59p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add task3 meaningless by 19/5 11:59p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'undo' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "undo";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'undo' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText5 = "undo";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'undo' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText6 = "undo";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys6 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UndoMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UndoMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add task1 on friday 11 ' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task1 on friday 11 ";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add task2 from monday to 19/4' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task2 from monday to 19/4";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add task3 from tues to friday' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add task3 from tues to friday";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add task4 by next saturday 23:59' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add task4 by next saturday 23:59";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'undo ' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText5 = "undo ";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'undo{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys6 = "undo{Enter}";
        
        /// <summary>
        /// Type 'undo{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys7 = "undo{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertUndoMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertUndoMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Friday, 17 Apr 2015        ///1. [11-12p] task1        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Friday, 17 Apr 2015\r1. [11-12p] task1\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RedoMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class RedoMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add task1 on 7/7 12p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task1 on 7/7 12p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add task2 on 19/5 3pm to 8p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task2 on 19/5 3pm to 8p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add task3 on 4/5 12' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add task3 on 4/5 12";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add task4 by 7/5 12p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add task4 by 7/5 12p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'undo{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "undo{Enter}";
        
        /// <summary>
        /// Type 'u{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys6 = "u{Enter}";
        
        /// <summary>
        /// Type 'r{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys7 = "r{Enter}";
        
        /// <summary>
        /// Type 'redo{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys8 = "redo{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RedoMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class RedoMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add task1 by friday 18' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task1 by friday 18";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add task2 by sunday 23:59' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task2 by sunday 23:59";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add task3 on next thurs 12:0' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add task3 on next thurs 12:0";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add task4 from next monday to 25/4 19' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add task4 from next monday to 25/4 19";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'undo' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText5 = "undo";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'undo{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys6 = "undo{Enter}";
        
        /// <summary>
        /// Type 'undo{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys7 = "undo{Enter}";
        
        /// <summary>
        /// Type 'redo{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys8 = "redo{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClearMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ClearMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add task1 on 4/5 12' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task1 on 4/5 12";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add task2 by 7/5 12p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task2 by 7/5 12p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add task3 from 5/5 6p to6/5 7p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add task3 from 5/5 6p to6/5 7p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add task4 from 4/5 to 9/5 12p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add task4 from 4/5 to 9/5 12p";
        
        /// <summary>
        /// Type '{Left}{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Left}{Enter}";
        
        /// <summary>
        /// Type 'l{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "l{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class SearchMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add basketball with friends on 8/5 12 to 14:00' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add basketball with friends on 8/5 12 to 14:00";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add group meeting on 11/5 12' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add group meeting on 11/5 12";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add meet ann at school on 17/5 10' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add meet ann at school on 17/5 10";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add prepare for exam from 19/4 to 28/4 12p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add prepare for exam from 19/4 to 28/4 12p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'search school' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText5 = "search school";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'display' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText6 = "display";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys6 = "{Enter}";
        
        /// <summary>
        /// Type 'search meet' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText7 = "search meet";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys7 = "{Enter}";
        
        /// <summary>
        /// Type 'display' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText8 = "display";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys8 = "{Enter}";
        
        /// <summary>
        /// Type 'search for with at' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText9 = "search for with at";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys9 = "{Enter}";
        
        /// <summary>
        /// Type 'display' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText10 = "display";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys10 = "{Enter}";
        
        /// <summary>
        /// Type 'search nn' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText11 = "search nn";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys11 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SerchMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class SerchMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'display' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "display";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add clean the room on 17/5 13 to 4p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add clean the room on 17/5 13 to 4p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add finish report by 5/5 11:59pm' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add finish report by 5/5 11:59pm";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type '{Left}{Left}{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Left}{Left}{Enter}";
        
        /// <summary>
        /// Type 'display ' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "display ";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'search 17/5' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "search 17/5";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InvalidDeleteMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class InvalidDeleteMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'cl' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "cl";
        
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add do laundry on fri 13 to 14:10' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add do laundry on fri 13 to 14:10";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add meeting with group mates on next wed 19' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add meeting with group mates on next wed 19";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add clear bill by next friday 12' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add clear bill by next friday 12";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add prepare for exam from 19/4 to 29/4' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText5 = "add prepare for exam from 19/4 to 29/4";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'search g w' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText6 = "search g w";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InvalidSearchMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class InvalidSearchMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'add task1 on 6/7 17 to 18' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "add task1 on 6/7 17 to 18";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add task1 on 7/6 17 to 18' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task1 on 7/6 17 to 18";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add meeting with friends on next sun 11 to 19' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add meeting with friends on next sun 11 to 19";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add study for exam by 19/4 12p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add study for exam by 19/4 12p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'search y f' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText5 = "search y f";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'display' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText6 = "display";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys6 = "{Enter}";
        
        /// <summary>
        /// Type 'search shdiaonsun' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText7 = "search shdiaonsun";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys7 = "{Enter}";
        
        /// <summary>
        /// Type 'display' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText8 = "display";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys8 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertTwelveHrMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertTwelveHrMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Thursday, 16 Apr 2015        ///1. [10:35p-11:35p] task2        ///Friday, 17 Apr 2015        ///2. [6:04-7:32p] task1        ///Monday, 20 Apr 2015        ///3. [0-25] task3        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Thursday, 16 Apr 2015\r1. [10:35p-11:35p] task2\rFriday, 17 Apr 2015\r2. [6:04-7:32p" +
            "] task1\rMonday, 20 Apr 2015\r3. [0-25] task3\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TwentyfourHrMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class TwentyfourHrMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add task1 on 23' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task1 on 23";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add task1 on 7/5 13' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task1 on 7/5 13";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add task2 on 4/6 19 to 19:30' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add task2 on 4/6 19 to 19:30";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add tsk3 by 7/5 24:59' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add tsk3 by 7/5 24:59";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'add task5 by 8/5 0' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText5 = "add task5 by 8/5 0";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'add task5 by 7/5 19:0' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText6 = "add task5 by 7/5 19:0";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys6 = "{Enter}";
        
        /// <summary>
        /// Type 'delete 1' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText7 = "delete 1";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys7 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FreeSlotMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class FreeSlotMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add task1 on 5/5 7 to 8' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task1 on 5/5 7 to 8";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add task2 on 5/5 8:30 to 9' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task2 on 5/5 8:30 to 9";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add task3 on 5/5 10 to 12:00' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add task3 on 5/5 10 to 12:00";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add task4 on 5/5 14 to 14:30' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add task4 on 5/5 14 to 14:30";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'add task5 5:30pm to 6pm' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText5 = "add task5 5:30pm to 6pm";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'add task5 on 5/5 5:30p to 6pm' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText6 = "add task5 on 5/5 5:30p to 6pm";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys6 = "{Enter}";
        
        /// <summary>
        /// Type 'add task6 on 5/5 10p to 11:30pm' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText7 = "add task6 on 5/5 10p to 11:30pm";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys7 = "{Enter}";
        
        /// <summary>
        /// Type 'free 1 5/5' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText8 = "free 1 5/5";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys8 = "{Enter}";
        
        /// <summary>
        /// Type 'free 3 5/5' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText9 = "free 3 5/5";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys9 = "{Enter}";
        
        /// <summary>
        /// Type 'free 4 5/5' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText10 = "free 4 5/5";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys10 = "{Enter}";
        
        /// <summary>
        /// Type 'free 5 5/5' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText11 = "free 5 5/5";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys11 = "{Enter}";
        
        /// <summary>
        /// Type 'display' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText12 = "display";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys12 = "{Enter}";
        
        /// <summary>
        /// Type 'delete 6 7' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText13 = "delete 6 7";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys13 = "{Enter}";
        
        /// <summary>
        /// Type 'free 6 5/5' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText14 = "free 6 5/5";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys14 = "{Enter}";
        
        /// <summary>
        /// Type 'display' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText15 = "display";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys15 = "{Enter}";
        
        /// <summary>
        /// Type 'delete 1 2 3 ' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText16 = "delete 1 2 3 ";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys16 = "{Enter}";
        
        /// <summary>
        /// Type 'add task5 on 5/5 3pm to 12p' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText17 = "add task5 on 5/5 3pm to 12p";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys17 = "{Enter}";
        
        /// <summary>
        /// Type 'free 2 5/5' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText18 = "free 2 5/5";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys18 = "{Enter}";
        
        /// <summary>
        /// Type 'display' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText19 = "display";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys19 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'trashi2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class trashi2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type '' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "";
        
        /// <summary>
        /// Type '{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = @"{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}";
        
        /// <summary>
        /// Type 'add task on today 21:54' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task on today 21:54";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'reminder 1' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "reminder 1";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'trash2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class trash2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'clear' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "clear";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add task by ' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task by ";
        
        /// <summary>
        /// Type 'add task by 12:57' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task by 12:57";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'reminder 1' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "reminder 1";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'notify' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "notify";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'notify{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "notify{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'trash3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class trash3Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'cleat' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "cleat";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'clear{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "clear{Enter}";
        
        /// <summary>
        /// Type 'add task1 on monday 10 to 12' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task1 on monday 10 to 12";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add task2 on monday 13 to 13:30' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task2 on monday 13 to 13:30";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add task3 on monday 14:30 to 167' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add task3 on monday 14:30 to 167";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertAddMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertAddMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Wednesday, 22 Apr 2015        ///1. [10-3p] task2        ///Sunday, 26 Apr 2015        ///2. [3p-4:32p] task3        ///Monday, 27 Apr 2015        ///3. [7p-8p] task1        ///Saturday, 2 May 2015        ///4. [3p-5:30p] task4        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Wednesday, 22 Apr 2015\r1. [10-3p] task2\rSunday, 26 Apr 2015\r2. [3p-4:32p] task3\rM" +
            "onday, 27 Apr 2015\r3. [7p-8p] task1\rSaturday, 2 May 2015\r4. [3p-5:30p] task4\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertAddMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertAddMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Tuesday, 21 Apr 2015        ///1. [10-3p, 25/4] task1        ///Saturday, 25 Apr 2015        ///2. [12p-1p, 26/4] task2        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Tuesday, 21 Apr 2015\r1. [10-3p, 25/4] task1\rSaturday, 25 Apr 2015\r2. [12p-1p, 26/" +
            "4] task2\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertAddMethod3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertAddMethod3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Deadline Events        ///1. [11][24/4] task3        ///2. [1p][26/4] task2        ///3. [11:59p][4/5] task1        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Deadline Events\r1. [11][24/4] task3\r2. [1p][26/4] task2\r3. [11:59p][4/5] task1\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InvalidAddMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class InvalidAddMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'delete 100' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "delete 100";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add task1 by 7/' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add task1 by 7/";
        
        /// <summary>
        /// Type 'add task1 by 7/5' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add task1 by 7/5";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'd{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "d{Enter}";
        
        /// <summary>
        /// Type 'add task4 from 7/5 4p to 17/5 ' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add task4 from 7/5 4p to 17/5 ";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'delete 100' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "delete 100";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'delete 1 to100' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText5 = "delete 1 to100";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys6 = "{Enter}";
        
        /// <summary>
        /// Type 'delete 1to100' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText6 = "delete 1to100";
        
        /// <summary>
        /// Type '{Left}{Left}{Left}{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys7 = "{Left}{Left}{Left}{Enter}";
        
        /// <summary>
        /// Type 'delete all' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText7 = "delete all";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys8 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertInvalidAddMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertInvalidAddMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Floating        ///1. task next monday        ///2. task2 at 25/5/2015        ///Friday, 19 Jun 2015        ///3. task3        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Floating\r1. task next monday\r2. task2 at 25/5/2015\rFriday, 19 Jun 2015\r3. task3\r\r" +
            "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertDeleteMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertDeleteMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals '        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertClearMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertClearMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals '        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertEditMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertEditMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Thursday, 23 Apr 2015        ///1. [11-1p] have lunch        ///Saturday, 25 Apr 2015        ///2. [7-9] first paper        ///Wednesday, 6 May 2015        ///3. [12p-1p] project meeting        ///Saturday, 9 May 2015        ///4. [1:09-2:09] vacation        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Thursday, 23 Apr 2015\r1. [11-1p] have lunch\rSaturday, 25 Apr 2015\r2. [7-9] first " +
            "paper\rWednesday, 6 May 2015\r3. [12p-1p] project meeting\rSaturday, 9 May 2015\r4. " +
            "[1:09-2:09] vacation\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertInvalidDeleteMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertInvalidDeleteMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Deadline Events        ///2. [11p][6/7] task2        ///Sunday, 17 May 2015        ///1. [12p-1p] task3        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Deadline Events\r2. [11p][6/7] task2\rSunday, 17 May 2015\r1. [12p-1p] task3\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertInvalidSearchMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertInvalidSearchMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Deadline Events        ///1. [12p][19/4] study for exam        ///Sunday, 26 Apr 2015        ///2. [11-7p] meeting with friends        ///Sunday, 7 Jun 2015        ///3. [5p-6p] task1        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Deadline Events\r1. [12p][19/4] study for exam\rSunday, 26 Apr 2015\r2. [11-7p] meet" +
            "ing with friends\rSunday, 7 Jun 2015\r3. [5p-6p] task1\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertRedoMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertRedoMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Deadline Events        ///2. [12p][7/5] task4        ///Monday, 4 May 2015        ///1. [12p-1p] task3        ///Tuesday, 19 May 2015        ///3. [3p-8p] task2        ///Tuesday, 7 Jul 2015        ///4. [12p-1p] task1        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Deadline Events\r2. [12p][7/5] task4\rMonday, 4 May 2015\r1. [12p-1p] task3\rTuesday," +
            " 19 May 2015\r3. [3p-8p] task2\rTuesday, 7 Jul 2015\r4. [12p-1p] task1\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSearchMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertSearchMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Sunday, 17 May 2015        ///4. [10-11] meet ann at school        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Sunday, 17 May 2015\r4. [10-11] meet ann at school\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSearchMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertSearchMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Sunday, 17 May 2015        ///5. [10-11] meet ann at school        ///6. [1p-4p] clean the room        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Sunday, 17 May 2015\r5. [10-11] meet ann at school\r6. [1p-4p] clean the room\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TwelveHrMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class TwelveHrMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Deadline Events        ///5. [2p][7/7] task2        ///Sunday, 26 Apr 2015        ///1. [12p-1p] task4        ///Monday, 4 May 2015        ///2. [12:30p-1:30p] task5        ///Tuesday, 5 May 2015        ///3. [3p-4p] task1        ///Thursday, 7 May 2015        ///4. [7:09-7p] task3        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Deadline Events\r5. [2p][7/7] task2\rSunday, 26 Apr 2015\r1. [12p-1p] task4\rMonday, " +
            "4 May 2015\r2. [12:30p-1:30p] task5\rTuesday, 5 May 2015\r3. [3p-4p] task1\rThursday" +
            ", 7 May 2015\r4. [7:09-7p] task3\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertTwentyfourHrMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertTwentyfourHrMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Deadline Events        ///3. [7p][7/5] task5        ///4. [0:59][7/5] tsk3        ///Thursday, 7 May 2015        ///2. [1p-2p] task1        ///Thursday, 4 Jun 2015        ///5. [7p-7:30p] task2        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Deadline Events\r3. [7p][7/5] task5\r4. [0:59][7/5] tsk3\rThursday, 7 May 2015\r2. [1" +
            "p-2p] task1\rThursday, 4 Jun 2015\r5. [7p-7:30p] task2\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertUndoMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertUndoMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals '        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertFreeSlotMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertFreeSlotMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Tuesday, 5 May 2015        ///1. [10-12p] task3        ///2. [2p-2:30p] task4        ///3. [3p-4p] task5        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Tuesday, 5 May 2015\r1. [10-12p] task3\r2. [2p-2:30p] task4\r3. [3p-4p] task5\r\r";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMagicMemoWindow : WinWindow
    {
        
        public UIMagicMemoWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Magic Memo";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public UICommandInputBoxWindow UICommandInputBoxWindow
        {
            get
            {
                if ((this.mUICommandInputBoxWindow == null))
                {
                    this.mUICommandInputBoxWindow = new UICommandInputBoxWindow(this);
                }
                return this.mUICommandInputBoxWindow;
            }
        }
        
        public UIAllTaskBoxWindow UIAllTaskBoxWindow
        {
            get
            {
                if ((this.mUIAllTaskBoxWindow == null))
                {
                    this.mUIAllTaskBoxWindow = new UIAllTaskBoxWindow(this);
                }
                return this.mUIAllTaskBoxWindow;
            }
        }
        
        public UICommandInputBoxWindow1 UICommandInputBoxWindow1
        {
            get
            {
                if ((this.mUICommandInputBoxWindow1 == null))
                {
                    this.mUICommandInputBoxWindow1 = new UICommandInputBoxWindow1(this);
                }
                return this.mUICommandInputBoxWindow1;
            }
        }
        
        public UICommandInputBoxWindow2 UICommandInputBoxWindow2
        {
            get
            {
                if ((this.mUICommandInputBoxWindow2 == null))
                {
                    this.mUICommandInputBoxWindow2 = new UICommandInputBoxWindow2(this);
                }
                return this.mUICommandInputBoxWindow2;
            }
        }
        
        public UICommandInputBoxWindow3 UICommandInputBoxWindow3
        {
            get
            {
                if ((this.mUICommandInputBoxWindow3 == null))
                {
                    this.mUICommandInputBoxWindow3 = new UICommandInputBoxWindow3(this);
                }
                return this.mUICommandInputBoxWindow3;
            }
        }
        
        public UICommandInputBoxWindow4 UICommandInputBoxWindow4
        {
            get
            {
                if ((this.mUICommandInputBoxWindow4 == null))
                {
                    this.mUICommandInputBoxWindow4 = new UICommandInputBoxWindow4(this);
                }
                return this.mUICommandInputBoxWindow4;
            }
        }
        
        public UICommandInputBoxWindow5 UICommandInputBoxWindow5
        {
            get
            {
                if ((this.mUICommandInputBoxWindow5 == null))
                {
                    this.mUICommandInputBoxWindow5 = new UICommandInputBoxWindow5(this);
                }
                return this.mUICommandInputBoxWindow5;
            }
        }
        
        public UICommandInputBoxWindow6 UICommandInputBoxWindow6
        {
            get
            {
                if ((this.mUICommandInputBoxWindow6 == null))
                {
                    this.mUICommandInputBoxWindow6 = new UICommandInputBoxWindow6(this);
                }
                return this.mUICommandInputBoxWindow6;
            }
        }
        
        public UICommandInputBoxWindow7 UICommandInputBoxWindow7
        {
            get
            {
                if ((this.mUICommandInputBoxWindow7 == null))
                {
                    this.mUICommandInputBoxWindow7 = new UICommandInputBoxWindow7(this);
                }
                return this.mUICommandInputBoxWindow7;
            }
        }
        
        public UICommandInputBoxWindow8 UICommandInputBoxWindow8
        {
            get
            {
                if ((this.mUICommandInputBoxWindow8 == null))
                {
                    this.mUICommandInputBoxWindow8 = new UICommandInputBoxWindow8(this);
                }
                return this.mUICommandInputBoxWindow8;
            }
        }
        
        public UICommandInputBoxWindow9 UICommandInputBoxWindow9
        {
            get
            {
                if ((this.mUICommandInputBoxWindow9 == null))
                {
                    this.mUICommandInputBoxWindow9 = new UICommandInputBoxWindow9(this);
                }
                return this.mUICommandInputBoxWindow9;
            }
        }
        
        public UICommandInputBoxWindow10 UICommandInputBoxWindow10
        {
            get
            {
                if ((this.mUICommandInputBoxWindow10 == null))
                {
                    this.mUICommandInputBoxWindow10 = new UICommandInputBoxWindow10(this);
                }
                return this.mUICommandInputBoxWindow10;
            }
        }
        
        public UICommandInputBoxWindow11 UICommandInputBoxWindow11
        {
            get
            {
                if ((this.mUICommandInputBoxWindow11 == null))
                {
                    this.mUICommandInputBoxWindow11 = new UICommandInputBoxWindow11(this);
                }
                return this.mUICommandInputBoxWindow11;
            }
        }
        
        public UICommandInputBoxWindow12 UICommandInputBoxWindow12
        {
            get
            {
                if ((this.mUICommandInputBoxWindow12 == null))
                {
                    this.mUICommandInputBoxWindow12 = new UICommandInputBoxWindow12(this);
                }
                return this.mUICommandInputBoxWindow12;
            }
        }
        
        public UIDeletedlinenumbers12Window UIDeletedlinenumbers12Window
        {
            get
            {
                if ((this.mUIDeletedlinenumbers12Window == null))
                {
                    this.mUIDeletedlinenumbers12Window = new UIDeletedlinenumbers12Window(this);
                }
                return this.mUIDeletedlinenumbers12Window;
            }
        }
        
        public UITodayTaskBoxWindow UITodayTaskBoxWindow
        {
            get
            {
                if ((this.mUITodayTaskBoxWindow == null))
                {
                    this.mUITodayTaskBoxWindow = new UITodayTaskBoxWindow(this);
                }
                return this.mUITodayTaskBoxWindow;
            }
        }
        
        public UIMagicMemoClient UIMagicMemoClient
        {
            get
            {
                if ((this.mUIMagicMemoClient == null))
                {
                    this.mUIMagicMemoClient = new UIMagicMemoClient(this);
                }
                return this.mUIMagicMemoClient;
            }
        }
        
        public UICommandInputBoxWindow13 UICommandInputBoxWindow13
        {
            get
            {
                if ((this.mUICommandInputBoxWindow13 == null))
                {
                    this.mUICommandInputBoxWindow13 = new UICommandInputBoxWindow13(this);
                }
                return this.mUICommandInputBoxWindow13;
            }
        }
        
        public UICommandInputBoxWindow14 UICommandInputBoxWindow14
        {
            get
            {
                if ((this.mUICommandInputBoxWindow14 == null))
                {
                    this.mUICommandInputBoxWindow14 = new UICommandInputBoxWindow14(this);
                }
                return this.mUICommandInputBoxWindow14;
            }
        }
        
        public UICommandInputBoxWindow15 UICommandInputBoxWindow15
        {
            get
            {
                if ((this.mUICommandInputBoxWindow15 == null))
                {
                    this.mUICommandInputBoxWindow15 = new UICommandInputBoxWindow15(this);
                }
                return this.mUICommandInputBoxWindow15;
            }
        }
        
        public UICommandInputBoxWindow16 UICommandInputBoxWindow16
        {
            get
            {
                if ((this.mUICommandInputBoxWindow16 == null))
                {
                    this.mUICommandInputBoxWindow16 = new UICommandInputBoxWindow16(this);
                }
                return this.mUICommandInputBoxWindow16;
            }
        }
        
        public UICommandInputBoxWindow17 UICommandInputBoxWindow17
        {
            get
            {
                if ((this.mUICommandInputBoxWindow17 == null))
                {
                    this.mUICommandInputBoxWindow17 = new UICommandInputBoxWindow17(this);
                }
                return this.mUICommandInputBoxWindow17;
            }
        }
        
        public UICommandInputBoxWindow18 UICommandInputBoxWindow18
        {
            get
            {
                if ((this.mUICommandInputBoxWindow18 == null))
                {
                    this.mUICommandInputBoxWindow18 = new UICommandInputBoxWindow18(this);
                }
                return this.mUICommandInputBoxWindow18;
            }
        }
        
        public UICommandInputBoxWindow19 UICommandInputBoxWindow19
        {
            get
            {
                if ((this.mUICommandInputBoxWindow19 == null))
                {
                    this.mUICommandInputBoxWindow19 = new UICommandInputBoxWindow19(this);
                }
                return this.mUICommandInputBoxWindow19;
            }
        }
        #endregion
        
        #region Fields
        private UICommandInputBoxWindow mUICommandInputBoxWindow;
        
        private UIAllTaskBoxWindow mUIAllTaskBoxWindow;
        
        private UICommandInputBoxWindow1 mUICommandInputBoxWindow1;
        
        private UICommandInputBoxWindow2 mUICommandInputBoxWindow2;
        
        private UICommandInputBoxWindow3 mUICommandInputBoxWindow3;
        
        private UICommandInputBoxWindow4 mUICommandInputBoxWindow4;
        
        private UICommandInputBoxWindow5 mUICommandInputBoxWindow5;
        
        private UICommandInputBoxWindow6 mUICommandInputBoxWindow6;
        
        private UICommandInputBoxWindow7 mUICommandInputBoxWindow7;
        
        private UICommandInputBoxWindow8 mUICommandInputBoxWindow8;
        
        private UICommandInputBoxWindow9 mUICommandInputBoxWindow9;
        
        private UICommandInputBoxWindow10 mUICommandInputBoxWindow10;
        
        private UICommandInputBoxWindow11 mUICommandInputBoxWindow11;
        
        private UICommandInputBoxWindow12 mUICommandInputBoxWindow12;
        
        private UIDeletedlinenumbers12Window mUIDeletedlinenumbers12Window;
        
        private UITodayTaskBoxWindow mUITodayTaskBoxWindow;
        
        private UIMagicMemoClient mUIMagicMemoClient;
        
        private UICommandInputBoxWindow13 mUICommandInputBoxWindow13;
        
        private UICommandInputBoxWindow14 mUICommandInputBoxWindow14;
        
        private UICommandInputBoxWindow15 mUICommandInputBoxWindow15;
        
        private UICommandInputBoxWindow16 mUICommandInputBoxWindow16;
        
        private UICommandInputBoxWindow17 mUICommandInputBoxWindow17;
        
        private UICommandInputBoxWindow18 mUICommandInputBoxWindow18;
        
        private UICommandInputBoxWindow19 mUICommandInputBoxWindow19;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow : WinWindow
    {
        
        public UICommandInputBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAllTaskBoxWindow : WinWindow
    {
        
        public UIAllTaskBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "allTaskBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAllTaskBoxEdit
        {
            get
            {
                if ((this.mUIAllTaskBoxEdit == null))
                {
                    this.mUIAllTaskBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAllTaskBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Magic Memo";
                    this.mUIAllTaskBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUIAllTaskBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAllTaskBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow1 : WinWindow
    {
        
        public UICommandInputBoxWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow2 : WinWindow
    {
        
        public UICommandInputBoxWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow3 : WinWindow
    {
        
        public UICommandInputBoxWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow4 : WinWindow
    {
        
        public UICommandInputBoxWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow5 : WinWindow
    {
        
        public UICommandInputBoxWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow6 : WinWindow
    {
        
        public UICommandInputBoxWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow7 : WinWindow
    {
        
        public UICommandInputBoxWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow8 : WinWindow
    {
        
        public UICommandInputBoxWindow8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow9 : WinWindow
    {
        
        public UICommandInputBoxWindow9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow10 : WinWindow
    {
        
        public UICommandInputBoxWindow10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow11 : WinWindow
    {
        
        public UICommandInputBoxWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow12 : WinWindow
    {
        
        public UICommandInputBoxWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIDeletedlinenumbers12Window : WinWindow
    {
        
        public UIDeletedlinenumbers12Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "successMessageLabel";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinText UIDeletedlinenumbers12Text
        {
            get
            {
                if ((this.mUIDeletedlinenumbers12Text == null))
                {
                    this.mUIDeletedlinenumbers12Text = new WinText(this);
                    #region Search Criteria
                    this.mUIDeletedlinenumbers12Text.SearchProperties[WinText.PropertyNames.Name] = "Deleted line numbers: 1, 2, Invalid line number specified: 3, 4, 5, 6";
                    this.mUIDeletedlinenumbers12Text.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUIDeletedlinenumbers12Text;
            }
        }
        
        public WinText UISearchresultsforaText
        {
            get
            {
                if ((this.mUISearchresultsforaText == null))
                {
                    this.mUISearchresultsforaText = new WinText(this);
                    #region Search Criteria
                    this.mUISearchresultsforaText.SearchProperties[WinText.PropertyNames.Name] = "Search results for: \"a\" ";
                    this.mUISearchresultsforaText.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUISearchresultsforaText;
            }
        }
        
        public WinText UINotificationtimechanText
        {
            get
            {
                if ((this.mUINotificationtimechanText == null))
                {
                    this.mUINotificationtimechanText = new WinText(this);
                    #region Search Criteria
                    this.mUINotificationtimechanText.SearchProperties[WinText.PropertyNames.Name] = "Notification time changed from 1 minute(s) to 1 minute(s)";
                    this.mUINotificationtimechanText.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUINotificationtimechanText;
            }
        }
        
        public WinText UIInvalidnumberspecifiText
        {
            get
            {
                if ((this.mUIInvalidnumberspecifiText == null))
                {
                    this.mUIInvalidnumberspecifiText = new WinText(this);
                    #region Search Criteria
                    this.mUIInvalidnumberspecifiText.SearchProperties[WinText.PropertyNames.Name] = "Invalid number specified!";
                    this.mUIInvalidnumberspecifiText.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUIInvalidnumberspecifiText;
            }
        }
        
        public WinText UIInvalidnumberspecifiText1
        {
            get
            {
                if ((this.mUIInvalidnumberspecifiText1 == null))
                {
                    this.mUIInvalidnumberspecifiText1 = new WinText(this);
                    #region Search Criteria
                    this.mUIInvalidnumberspecifiText1.SearchProperties[WinText.PropertyNames.Name] = "Invalid number specified!";
                    this.mUIInvalidnumberspecifiText1.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUIInvalidnumberspecifiText1;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIDeletedlinenumbers12Text;
        
        private WinText mUISearchresultsforaText;
        
        private WinText mUINotificationtimechanText;
        
        private WinText mUIInvalidnumberspecifiText;
        
        private WinText mUIInvalidnumberspecifiText1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UITodayTaskBoxWindow : WinWindow
    {
        
        public UITodayTaskBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "todayTaskBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UITodayTaskBoxEdit
        {
            get
            {
                if ((this.mUITodayTaskBoxEdit == null))
                {
                    this.mUITodayTaskBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITodayTaskBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUITodayTaskBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITodayTaskBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMagicMemoClient : WinClient
    {
        
        public UIMagicMemoClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Magic Memo";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinWindow UIPictureBoxWindow
        {
            get
            {
                if ((this.mUIPictureBoxWindow == null))
                {
                    this.mUIPictureBoxWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIPictureBoxWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Added line: \"task4\"";
                    this.mUIPictureBoxWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
                    this.mUIPictureBoxWindow.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
                    this.mUIPictureBoxWindow.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUIPictureBoxWindow;
            }
        }
        
        public WinWindow UICommandInputBoxWindow
        {
            get
            {
                if ((this.mUICommandInputBoxWindow == null))
                {
                    this.mUICommandInputBoxWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUICommandInputBoxWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Upcoming Tasks";
                    this.mUICommandInputBoxWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUICommandInputBoxWindow.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIPictureBoxWindow;
        
        private WinWindow mUICommandInputBoxWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow13 : WinWindow
    {
        
        public UICommandInputBoxWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow14 : WinWindow
    {
        
        public UICommandInputBoxWindow14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow15 : WinWindow
    {
        
        public UICommandInputBoxWindow15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow16 : WinWindow
    {
        
        public UICommandInputBoxWindow16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow17 : WinWindow
    {
        
        public UICommandInputBoxWindow17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow18 : WinWindow
    {
        
        public UICommandInputBoxWindow18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow19 : WinWindow
    {
        
        public UICommandInputBoxWindow19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Upcoming Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMagicMemoWindow1 : WinWindow
    {
        
        public UIMagicMemoWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Magic Memo";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.FilterProperties[WinWindow.PropertyNames.OrderOfInvocation] = "2";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public UIMagicMemoClient1 UIMagicMemoClient
        {
            get
            {
                if ((this.mUIMagicMemoClient == null))
                {
                    this.mUIMagicMemoClient = new UIMagicMemoClient1(this);
                }
                return this.mUIMagicMemoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIMagicMemoClient1 mUIMagicMemoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMagicMemoClient1 : WinClient
    {
        
        public UIMagicMemoClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Magic Memo";
            this.WindowTitles.Add("Magic Memo");
            #endregion
        }
        
        #region Properties
        public WinButton UIQuitButton
        {
            get
            {
                if ((this.mUIQuitButton == null))
                {
                    this.mUIQuitButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIQuitButton.SearchProperties[WinButton.PropertyNames.Name] = "Quit";
                    this.mUIQuitButton.WindowTitles.Add("Magic Memo");
                    #endregion
                }
                return this.mUIQuitButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIQuitButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMicrosoftVisualCRuntWindow : WinWindow
    {
        
        public UIMicrosoftVisualCRuntWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Microsoft Visual C++ Runtime Library";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Microsoft Visual C++ Runtime Library");
            #endregion
        }
        
        #region Properties
        public UI重试RWindow UI重试RWindow
        {
            get
            {
                if ((this.mUI重试RWindow == null))
                {
                    this.mUI重试RWindow = new UI重试RWindow(this);
                }
                return this.mUI重试RWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI重试RWindow mUI重试RWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UI重试RWindow : WinWindow
    {
        
        public UI重试RWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "4";
            this.WindowTitles.Add("Microsoft Visual C++ Runtime Library");
            #endregion
        }
        
        #region Properties
        public WinButton UI重试RButton
        {
            get
            {
                if ((this.mUI重试RButton == null))
                {
                    this.mUI重试RButton = new WinButton(this);
                    #region Search Criteria
                    this.mUI重试RButton.SearchProperties[WinButton.PropertyNames.Name] = "重试(R)";
                    this.mUI重试RButton.WindowTitles.Add("Microsoft Visual C++ Runtime Library");
                    #endregion
                }
                return this.mUI重试RButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI重试RButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMainControllerTestcpWindow : WinWindow
    {
        
        public UIMainControllerTestcpWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "main/ControllerTest.cpp at master · cs2103jan2015-w11-2c/main - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("main/ControllerTest.cpp at master · cs2103jan2015-w11-2c/main - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIChromeLegacyWindowWindow UIChromeLegacyWindowWindow
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow == null))
                {
                    this.mUIChromeLegacyWindowWindow = new UIChromeLegacyWindowWindow(this);
                }
                return this.mUIChromeLegacyWindowWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIChromeLegacyWindowWindow mUIChromeLegacyWindowWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIChromeLegacyWindowWindow : WinWindow
    {
        
        public UIChromeLegacyWindowWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "271532200";
            this.WindowTitles.Add("main/ControllerTest.cpp at master · cs2103jan2015-w11-2c/main - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIMainControllerTestcpDocument
        {
            get
            {
                if ((this.mUIMainControllerTestcpDocument == null))
                {
                    this.mUIMainControllerTestcpDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIMainControllerTestcpDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIMainControllerTestcpDocument.WindowTitles.Add("main/ControllerTest.cpp at master · cs2103jan2015-w11-2c/main - Google Chrome");
                    #endregion
                }
                return this.mUIMainControllerTestcpDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIMainControllerTestcpDocument;
        #endregion
    }
}
