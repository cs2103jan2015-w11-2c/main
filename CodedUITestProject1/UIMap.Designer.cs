// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddMethod1 - Use 'AddMethod1Params' to pass parameters into this method.
        /// </summary>
        public void AddMethod1()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            #endregion

            // Type 'add event1[3/4 2015 19' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.AddMethod1Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.AddMethod1Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add event2 [sunday 19' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.AddMethod1Params.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.AddMethod1Params.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add event3[sun 19 - 22' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.AddMethod1Params.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.AddMethod1Params.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add event4[4/4 2015 18 - 20 ' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.AddMethod1Params.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.AddMethod1Params.UICommandInputBoxEditSendKeys3, ModifierKeys.None);
        }
        
        /// <summary>
        /// AssertAddMethod - Use 'AssertAddMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertAddMethod()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoGUIWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Friday, 3 Apr 2015            //1.  event1            //Saturday, 4 Apr 2015            //2.  event4            //Sunday, 5 Apr 2015            //3. [7-10pm] event3            //4. [7pm] event2            //            //'
            Assert.AreEqual(this.AssertAddMethodExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertDeleteMethod - Use 'AssertDeleteMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertDeleteMethod()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoGUIWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            WinEdit uITodayTaskBoxEdit = this.UIMagicMemoGUIWindow.UITodayTaskBoxWindow.UITodayTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Sunday, 5 Apr 2015            //2. [6pm] event1            //            //'
            Assert.AreEqual(this.AssertDeleteMethodExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);

            // Verify that the 'Text' property of 'todayTaskBox' text box equals 'Wednesday, 1 Apr 2015            //1.  event3            //            //'
            Assert.AreEqual(this.AssertDeleteMethodExpectedValues.UITodayTaskBoxEditText, uITodayTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertEditMethod - Use 'AssertEditMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertEditMethod()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoGUIWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box contains 'Sunday, 5 Apr 2015            //2. [7pm] movie with parents            //            //'
            StringAssert.Contains(uIAllTaskBoxEdit.Text, this.AssertEditMethodExpectedValues.UIAllTaskBoxEditText);
        }
        
        /// <summary>
        /// AssertSearchMethod - Use 'AssertSearchMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertSearchMethod()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoGUIWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Sunday, 5 Apr 2015            //5. [5pm] targetEvent            //            //'
            Assert.AreEqual(this.AssertSearchMethodExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertSortAlphabeticallyMethod - Use 'AssertSortAlphabeticallyMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertSortAlphabeticallyMethod()
        {
            #region Variable Declarations
            WinEdit uITodayTaskBoxEdit = this.UIMagicMemoGUIWindow.UITodayTaskBoxWindow.UITodayTaskBoxEdit;
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoGUIWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'todayTaskBox' text box equals 'Wednesday, 1 Apr 2015            //1. [11] aaa            //6.  gef            //            //'
            Assert.AreEqual(this.AssertSortAlphabeticallyMethodExpectedValues.UITodayTaskBoxEditText, uITodayTaskBoxEdit.Text);

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Sunday, 5 Apr 2015            //2. [11] bbb            //Friday, 3 Apr 2015            //3. [11] ccc            //Saturday, 4 Apr 2015            //4.  ddd            //Friday, 3 Apr 2015            //5. [5pm] eee            //Saturday, 4 Apr 2015            //7. [12-3pm] ggg            //            //'
            Assert.AreEqual(this.AssertSortAlphabeticallyMethodExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// AssertUndoMethod - Use 'AssertUndoMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertUndoMethod()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoGUIWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Saturday, 7 Mar 2015            //1.  hhhh            //            //'
            Assert.AreEqual(this.AssertUndoMethodExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// DeleteMethod - Use 'DeleteMethodParams' to pass parameters into this method.
        /// </summary>
        public void DeleteMethod()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            #endregion

            // Type 'add event1[sun 18' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.DeleteMethodParams.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.DeleteMethodParams.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add event2[sat 17' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.DeleteMethodParams.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.DeleteMethodParams.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add event3[sat10' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.DeleteMethodParams.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.DeleteMethodParams.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add event3[sat 10' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.DeleteMethodParams.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.DeleteMethodParams.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'delete 2 3' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.DeleteMethodParams.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.DeleteMethodParams.UICommandInputBoxEditSendKeys4, ModifierKeys.None);
        }
        
        /// <summary>
        /// add event"movie with mom [fri 19" and then add another event.Then edit the first event,change it to"movie with parents[sunday 19"
        /// </summary>
        public void EditMethod()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoGUIWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Type 'add movie with mom[fri 19' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.EditMethodParams.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.EditMethodParams.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add kkkk[fri 18' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.EditMethodParams.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.EditMethodParams.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'edit 2 movie with parents[sunday 19' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.EditMethodParams.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.EditMethodParams.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type '' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.EditMethodParams.UICommandInputBoxEditText3;

            // Click 'allTaskBox' text box
            Mouse.Click(uIAllTaskBoxEdit, new Point(202, 98));
        }
        
        /// <summary>
        /// RedoMethod - Use 'RedoMethodParams' to pass parameters into this method.
        /// </summary>
        public void RedoMethod()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            #endregion

            // Type 'add event[friday 10 - 13' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.RedoMethodParams.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.RedoMethodParams.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'edit 1 event[sun 10 -12' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.RedoMethodParams.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.RedoMethodParams.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'undo' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.RedoMethodParams.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.RedoMethodParams.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'redo' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.RedoMethodParams.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.RedoMethodParams.UICommandInputBoxEditSendKeys3, ModifierKeys.None);
        }
        
        /// <summary>
        /// SearchMethod - Use 'SearchMethodParams' to pass parameters into this method.
        /// </summary>
        public void SearchMethod()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoGUIWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            #endregion

            // Type 'add 111[thurs 11' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.SearchMethodParams.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.SearchMethodParams.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add 222[fri 15' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.SearchMethodParams.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.SearchMethodParams.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add 333[friday 19' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.SearchMethodParams.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.SearchMethodParams.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add 444[sat 7' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.SearchMethodParams.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.SearchMethodParams.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'add targetEvent[sun 17' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.SearchMethodParams.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.SearchMethodParams.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'add 555[sun 17' in 'commandInputBox' text box
            uICommandInputBoxEdit5.Text = this.SearchMethodParams.UICommandInputBoxEditText5;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.SearchMethodParams.UICommandInputBoxEditSendKeys5, ModifierKeys.None);

            // Click 'allTaskBox' text box
            Mouse.Click(uIAllTaskBoxEdit, new Point(185, 222));

            // Type 'search target' in 'commandInputBox' text box
            uICommandInputBoxEdit6.Text = this.SearchMethodParams.UICommandInputBoxEditText6;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.SearchMethodParams.UICommandInputBoxEditSendKeys6, ModifierKeys.None);

            // Click 'allTaskBox' text box
            Mouse.Click(uIAllTaskBoxEdit, new Point(164, 207));
        }
        
        /// <summary>
        /// SortMethod - Use 'SortMethodParams' to pass parameters into this method.
        /// </summary>
        public void SortMethod()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit3 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow3.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit4 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow4.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit5 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow5.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit6 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow6.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit7 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow7.UICommandInputBoxEdit;
            #endregion

            // Type 'add aaa[11' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.SortMethodParams.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.SortMethodParams.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add bbb[sun 11' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.SortMethodParams.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.SortMethodParams.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'add ccc[fri 11' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.SortMethodParams.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.SortMethodParams.UICommandInputBoxEditSendKeys2, ModifierKeys.None);

            // Type 'add ddd[4/4 2015 13' in 'commandInputBox' text box
            uICommandInputBoxEdit3.Text = this.SortMethodParams.UICommandInputBoxEditText3;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit3, this.SortMethodParams.UICommandInputBoxEditSendKeys3, ModifierKeys.None);

            // Type 'add eee[fri 17' in 'commandInputBox' text box
            uICommandInputBoxEdit4.Text = this.SortMethodParams.UICommandInputBoxEditText4;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit4, this.SortMethodParams.UICommandInputBoxEditSendKeys4, ModifierKeys.None);

            // Type 'add ggg[sat 12 - 15' in 'commandInputBox' text box
            uICommandInputBoxEdit5.Text = this.SortMethodParams.UICommandInputBoxEditText5;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit5, this.SortMethodParams.UICommandInputBoxEditSendKeys5, ModifierKeys.None);

            // Type 'add gef[1/4 2015 13' in 'commandInputBox' text box
            uICommandInputBoxEdit6.Text = this.SortMethodParams.UICommandInputBoxEditText6;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit6, this.SortMethodParams.UICommandInputBoxEditSendKeys6, ModifierKeys.None);

            // Type 'sort alphabetically' in 'commandInputBox' text box
            uICommandInputBoxEdit7.Text = this.SortMethodParams.UICommandInputBoxEditText7;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit7, this.SortMethodParams.UICommandInputBoxEditSendKeys7, ModifierKeys.None);
        }
        
        /// <summary>
        /// UndoMethod - Use 'UndoMethodParams' to pass parameters into this method.
        /// </summary>
        public void UndoMethod()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit1 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow1.UICommandInputBoxEdit;
            WinEdit uICommandInputBoxEdit2 = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow2.UICommandInputBoxEdit;
            #endregion

            // Type 'add hhhh[7/3 2015 15' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.UndoMethodParams.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.UndoMethodParams.UICommandInputBoxEditSendKeys, ModifierKeys.None);

            // Type 'add kkkk[7/3 2015 16' in 'commandInputBox' text box
            uICommandInputBoxEdit1.Text = this.UndoMethodParams.UICommandInputBoxEditText1;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit1, this.UndoMethodParams.UICommandInputBoxEditSendKeys1, ModifierKeys.None);

            // Type 'undo' in 'commandInputBox' text box
            uICommandInputBoxEdit2.Text = this.UndoMethodParams.UICommandInputBoxEditText2;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit2, this.UndoMethodParams.UICommandInputBoxEditSendKeys2, ModifierKeys.None);
        }
        
        /// <summary>
        /// AssertRedoMethod - Use 'AssertRedoMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertRedoMethod()
        {
            #region Variable Declarations
            WinEdit uIAllTaskBoxEdit = this.UIMagicMemoGUIWindow.UIAllTaskBoxWindow.UIAllTaskBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'allTaskBox' text box equals 'Sunday, 5 Apr 2015            //1. [10] event            //            //'
            Assert.AreEqual(this.AssertRedoMethodExpectedValues.UIAllTaskBoxEditText, uIAllTaskBoxEdit.Text);
        }
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinEdit uICommandInputBoxEdit = this.UIMagicMemoGUIWindow.UICommandInputBoxWindow.UICommandInputBoxEdit;
            #endregion

            // Type 'add kk[fri 13' in 'commandInputBox' text box
            uICommandInputBoxEdit.Text = this.RecordedMethod1Params.UICommandInputBoxEditText;

            // Type '{Enter}' in 'commandInputBox' text box
            Keyboard.SendKeys(uICommandInputBoxEdit, this.RecordedMethod1Params.UICommandInputBoxEditSendKeys, ModifierKeys.None);
        }
        
        #region Properties
        public virtual AddMethod1Params AddMethod1Params
        {
            get
            {
                if ((this.mAddMethod1Params == null))
                {
                    this.mAddMethod1Params = new AddMethod1Params();
                }
                return this.mAddMethod1Params;
            }
        }
        
        public virtual AssertAddMethodExpectedValues AssertAddMethodExpectedValues
        {
            get
            {
                if ((this.mAssertAddMethodExpectedValues == null))
                {
                    this.mAssertAddMethodExpectedValues = new AssertAddMethodExpectedValues();
                }
                return this.mAssertAddMethodExpectedValues;
            }
        }
        
        public virtual AssertDeleteMethodExpectedValues AssertDeleteMethodExpectedValues
        {
            get
            {
                if ((this.mAssertDeleteMethodExpectedValues == null))
                {
                    this.mAssertDeleteMethodExpectedValues = new AssertDeleteMethodExpectedValues();
                }
                return this.mAssertDeleteMethodExpectedValues;
            }
        }
        
        public virtual AssertEditMethodExpectedValues AssertEditMethodExpectedValues
        {
            get
            {
                if ((this.mAssertEditMethodExpectedValues == null))
                {
                    this.mAssertEditMethodExpectedValues = new AssertEditMethodExpectedValues();
                }
                return this.mAssertEditMethodExpectedValues;
            }
        }
        
        public virtual AssertSearchMethodExpectedValues AssertSearchMethodExpectedValues
        {
            get
            {
                if ((this.mAssertSearchMethodExpectedValues == null))
                {
                    this.mAssertSearchMethodExpectedValues = new AssertSearchMethodExpectedValues();
                }
                return this.mAssertSearchMethodExpectedValues;
            }
        }
        
        public virtual AssertSortAlphabeticallyMethodExpectedValues AssertSortAlphabeticallyMethodExpectedValues
        {
            get
            {
                if ((this.mAssertSortAlphabeticallyMethodExpectedValues == null))
                {
                    this.mAssertSortAlphabeticallyMethodExpectedValues = new AssertSortAlphabeticallyMethodExpectedValues();
                }
                return this.mAssertSortAlphabeticallyMethodExpectedValues;
            }
        }
        
        public virtual AssertUndoMethodExpectedValues AssertUndoMethodExpectedValues
        {
            get
            {
                if ((this.mAssertUndoMethodExpectedValues == null))
                {
                    this.mAssertUndoMethodExpectedValues = new AssertUndoMethodExpectedValues();
                }
                return this.mAssertUndoMethodExpectedValues;
            }
        }
        
        public virtual DeleteMethodParams DeleteMethodParams
        {
            get
            {
                if ((this.mDeleteMethodParams == null))
                {
                    this.mDeleteMethodParams = new DeleteMethodParams();
                }
                return this.mDeleteMethodParams;
            }
        }
        
        public virtual EditMethodParams EditMethodParams
        {
            get
            {
                if ((this.mEditMethodParams == null))
                {
                    this.mEditMethodParams = new EditMethodParams();
                }
                return this.mEditMethodParams;
            }
        }
        
        public virtual RedoMethodParams RedoMethodParams
        {
            get
            {
                if ((this.mRedoMethodParams == null))
                {
                    this.mRedoMethodParams = new RedoMethodParams();
                }
                return this.mRedoMethodParams;
            }
        }
        
        public virtual SearchMethodParams SearchMethodParams
        {
            get
            {
                if ((this.mSearchMethodParams == null))
                {
                    this.mSearchMethodParams = new SearchMethodParams();
                }
                return this.mSearchMethodParams;
            }
        }
        
        public virtual SortMethodParams SortMethodParams
        {
            get
            {
                if ((this.mSortMethodParams == null))
                {
                    this.mSortMethodParams = new SortMethodParams();
                }
                return this.mSortMethodParams;
            }
        }
        
        public virtual UndoMethodParams UndoMethodParams
        {
            get
            {
                if ((this.mUndoMethodParams == null))
                {
                    this.mUndoMethodParams = new UndoMethodParams();
                }
                return this.mUndoMethodParams;
            }
        }
        
        public virtual AssertRedoMethodExpectedValues AssertRedoMethodExpectedValues
        {
            get
            {
                if ((this.mAssertRedoMethodExpectedValues == null))
                {
                    this.mAssertRedoMethodExpectedValues = new AssertRedoMethodExpectedValues();
                }
                return this.mAssertRedoMethodExpectedValues;
            }
        }
        
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UIMagicMemoGUIWindow UIMagicMemoGUIWindow
        {
            get
            {
                if ((this.mUIMagicMemoGUIWindow == null))
                {
                    this.mUIMagicMemoGUIWindow = new UIMagicMemoGUIWindow();
                }
                return this.mUIMagicMemoGUIWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddMethod1Params mAddMethod1Params;
        
        private AssertAddMethodExpectedValues mAssertAddMethodExpectedValues;
        
        private AssertDeleteMethodExpectedValues mAssertDeleteMethodExpectedValues;
        
        private AssertEditMethodExpectedValues mAssertEditMethodExpectedValues;
        
        private AssertSearchMethodExpectedValues mAssertSearchMethodExpectedValues;
        
        private AssertSortAlphabeticallyMethodExpectedValues mAssertSortAlphabeticallyMethodExpectedValues;
        
        private AssertUndoMethodExpectedValues mAssertUndoMethodExpectedValues;
        
        private DeleteMethodParams mDeleteMethodParams;
        
        private EditMethodParams mEditMethodParams;
        
        private RedoMethodParams mRedoMethodParams;
        
        private SearchMethodParams mSearchMethodParams;
        
        private SortMethodParams mSortMethodParams;
        
        private UndoMethodParams mUndoMethodParams;
        
        private AssertRedoMethodExpectedValues mAssertRedoMethodExpectedValues;
        
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UIMagicMemoGUIWindow mUIMagicMemoGUIWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AddMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'add event1[3/4 2015 19' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "add event1[3/4 2015 19";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add event2 [sunday 19' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add event2 [sunday 19";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add event3[sun 19 - 22' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add event3[sun 19 - 22";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add event4[4/4 2015 18 - 20 ' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add event4[4/4 2015 18 - 20 ";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertAddMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertAddMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Friday, 3 Apr 2015        ///1.  event1        ///Saturday, 4 Apr 2015        ///2.  event4        ///Sunday, 5 Apr 2015        ///3. [7-10pm] event3        ///4. [7pm] event2        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Friday, 3 Apr 2015\r1.  event1\rSaturday, 4 Apr 2015\r2.  event4\rSunday, 5 Apr 2015\r" +
            "3. [7-10pm] event3\r4. [7pm] event2\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertDeleteMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertDeleteMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Sunday, 5 Apr 2015        ///2. [6pm] event1        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Sunday, 5 Apr 2015\r2. [6pm] event1\r\r";
        
        /// <summary>
        /// Verify that the 'Text' property of 'todayTaskBox' text box equals 'Wednesday, 1 Apr 2015        ///1.  event3        ///        ///'
        /// </summary>
        public string UITodayTaskBoxEditText = "Wednesday, 1 Apr 2015\r1.  event3\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertEditMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertEditMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box contains 'Sunday, 5 Apr 2015        ///2. [7pm] movie with parents        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Sunday, 5 Apr 2015\r2. [7pm] movie with parents\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSearchMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertSearchMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Sunday, 5 Apr 2015        ///5. [5pm] targetEvent        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Sunday, 5 Apr 2015\r5. [5pm] targetEvent\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSortAlphabeticallyMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertSortAlphabeticallyMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'todayTaskBox' text box equals 'Wednesday, 1 Apr 2015        ///1. [11] aaa        ///6.  gef        ///        ///'
        /// </summary>
        public string UITodayTaskBoxEditText = "Wednesday, 1 Apr 2015\r1. [11] aaa\r6.  gef\r\r";
        
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Sunday, 5 Apr 2015        ///2. [11] bbb        ///Friday, 3 Apr 2015        ///3. [11] ccc        ///Saturday, 4 Apr 2015        ///4.  ddd        ///Friday, 3 Apr 2015        ///5. [5pm] eee        ///Saturday, 4 Apr 2015        ///7. [12-3pm] ggg        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Sunday, 5 Apr 2015\r2. [11] bbb\rFriday, 3 Apr 2015\r3. [11] ccc\rSaturday, 4 Apr 201" +
            "5\r4.  ddd\rFriday, 3 Apr 2015\r5. [5pm] eee\rSaturday, 4 Apr 2015\r7. [12-3pm] ggg\r\r" +
            "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertUndoMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertUndoMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Saturday, 7 Mar 2015        ///1.  hhhh        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Saturday, 7 Mar 2015\r1.  hhhh\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DeleteMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class DeleteMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'add event1[sun 18' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "add event1[sun 18";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add event2[sat 17' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add event2[sat 17";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add event3[sat10' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add event3[sat10";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add event3[sat 10' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add event3[sat 10";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'delete 2 3' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "delete 2 3";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class EditMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'add movie with mom[fri 19' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "add movie with mom[fri 19";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add kkkk[fri 18' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add kkkk[fri 18";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'edit 2 movie with parents[sunday 19' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "edit 2 movie with parents[sunday 19";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type '' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RedoMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class RedoMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'add event[friday 10 - 13' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "add event[friday 10 - 13";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'edit 1 event[sun 10 -12' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "edit 1 event[sun 10 -12";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'undo' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "undo";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'redo' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "redo";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class SearchMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'add 111[thurs 11' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "add 111[thurs 11";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add 222[fri 15' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add 222[fri 15";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add 333[friday 19' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add 333[friday 19";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add 444[sat 7' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add 444[sat 7";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add targetEvent[sun 17' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add targetEvent[sun 17";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'add 555[sun 17' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText5 = "add 555[sun 17";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'search target' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText6 = "search target";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys6 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SortMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class SortMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'add aaa[11' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "add aaa[11";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add bbb[sun 11' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add bbb[sun 11";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'add ccc[fri 11' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "add ccc[fri 11";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'add ddd[4/4 2015 13' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText3 = "add ddd[4/4 2015 13";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'add eee[fri 17' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText4 = "add eee[fri 17";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'add ggg[sat 12 - 15' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText5 = "add ggg[sat 12 - 15";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'add gef[1/4 2015 13' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText6 = "add gef[1/4 2015 13";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys6 = "{Enter}";
        
        /// <summary>
        /// Type 'sort alphabetically' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText7 = "sort alphabetically";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys7 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UndoMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UndoMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'add hhhh[7/3 2015 15' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "add hhhh[7/3 2015 15";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'add kkkk[7/3 2015 16' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText1 = "add kkkk[7/3 2015 16";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'undo' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText2 = "undo";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys2 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertRedoMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertRedoMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'allTaskBox' text box equals 'Sunday, 5 Apr 2015        ///1. [10] event        ///        ///'
        /// </summary>
        public string UIAllTaskBoxEditText = "Sunday, 5 Apr 2015\r1. [10] event\r\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'add kk[fri 13' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditText = "add kk[fri 13";
        
        /// <summary>
        /// Type '{Enter}' in 'commandInputBox' text box
        /// </summary>
        public string UICommandInputBoxEditSendKeys = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMagicMemoGUIWindow : WinWindow
    {
        
        public UIMagicMemoGUIWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MagicMemoGUI";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MagicMemoGUI");
            #endregion
        }
        
        #region Properties
        public UICommandInputBoxWindow UICommandInputBoxWindow
        {
            get
            {
                if ((this.mUICommandInputBoxWindow == null))
                {
                    this.mUICommandInputBoxWindow = new UICommandInputBoxWindow(this);
                }
                return this.mUICommandInputBoxWindow;
            }
        }
        
        public UITodayTaskBoxWindow UITodayTaskBoxWindow
        {
            get
            {
                if ((this.mUITodayTaskBoxWindow == null))
                {
                    this.mUITodayTaskBoxWindow = new UITodayTaskBoxWindow(this);
                }
                return this.mUITodayTaskBoxWindow;
            }
        }
        
        public UIAllTaskBoxWindow UIAllTaskBoxWindow
        {
            get
            {
                if ((this.mUIAllTaskBoxWindow == null))
                {
                    this.mUIAllTaskBoxWindow = new UIAllTaskBoxWindow(this);
                }
                return this.mUIAllTaskBoxWindow;
            }
        }
        
        public UIAddedlinefamilydinneWindow UIAddedlinefamilydinneWindow
        {
            get
            {
                if ((this.mUIAddedlinefamilydinneWindow == null))
                {
                    this.mUIAddedlinefamilydinneWindow = new UIAddedlinefamilydinneWindow(this);
                }
                return this.mUIAddedlinefamilydinneWindow;
            }
        }
        
        public UICommandInputBoxWindow1 UICommandInputBoxWindow1
        {
            get
            {
                if ((this.mUICommandInputBoxWindow1 == null))
                {
                    this.mUICommandInputBoxWindow1 = new UICommandInputBoxWindow1(this);
                }
                return this.mUICommandInputBoxWindow1;
            }
        }
        
        public UICommandInputBoxWindow2 UICommandInputBoxWindow2
        {
            get
            {
                if ((this.mUICommandInputBoxWindow2 == null))
                {
                    this.mUICommandInputBoxWindow2 = new UICommandInputBoxWindow2(this);
                }
                return this.mUICommandInputBoxWindow2;
            }
        }
        
        public WinClient UIMagicMemoGUIClient
        {
            get
            {
                if ((this.mUIMagicMemoGUIClient == null))
                {
                    this.mUIMagicMemoGUIClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIMagicMemoGUIClient.SearchProperties[WinControl.PropertyNames.Name] = "MagicMemoGUI";
                    this.mUIMagicMemoGUIClient.WindowTitles.Add("MagicMemoGUI");
                    #endregion
                }
                return this.mUIMagicMemoGUIClient;
            }
        }
        
        public UICommandInputBoxWindow3 UICommandInputBoxWindow3
        {
            get
            {
                if ((this.mUICommandInputBoxWindow3 == null))
                {
                    this.mUICommandInputBoxWindow3 = new UICommandInputBoxWindow3(this);
                }
                return this.mUICommandInputBoxWindow3;
            }
        }
        
        public UICommandInputBoxWindow4 UICommandInputBoxWindow4
        {
            get
            {
                if ((this.mUICommandInputBoxWindow4 == null))
                {
                    this.mUICommandInputBoxWindow4 = new UICommandInputBoxWindow4(this);
                }
                return this.mUICommandInputBoxWindow4;
            }
        }
        
        public UICommandInputBoxWindow5 UICommandInputBoxWindow5
        {
            get
            {
                if ((this.mUICommandInputBoxWindow5 == null))
                {
                    this.mUICommandInputBoxWindow5 = new UICommandInputBoxWindow5(this);
                }
                return this.mUICommandInputBoxWindow5;
            }
        }
        
        public UICommandInputBoxWindow6 UICommandInputBoxWindow6
        {
            get
            {
                if ((this.mUICommandInputBoxWindow6 == null))
                {
                    this.mUICommandInputBoxWindow6 = new UICommandInputBoxWindow6(this);
                }
                return this.mUICommandInputBoxWindow6;
            }
        }
        
        public UICommandInputBoxWindow7 UICommandInputBoxWindow7
        {
            get
            {
                if ((this.mUICommandInputBoxWindow7 == null))
                {
                    this.mUICommandInputBoxWindow7 = new UICommandInputBoxWindow7(this);
                }
                return this.mUICommandInputBoxWindow7;
            }
        }
        #endregion
        
        #region Fields
        private UICommandInputBoxWindow mUICommandInputBoxWindow;
        
        private UITodayTaskBoxWindow mUITodayTaskBoxWindow;
        
        private UIAllTaskBoxWindow mUIAllTaskBoxWindow;
        
        private UIAddedlinefamilydinneWindow mUIAddedlinefamilydinneWindow;
        
        private UICommandInputBoxWindow1 mUICommandInputBoxWindow1;
        
        private UICommandInputBoxWindow2 mUICommandInputBoxWindow2;
        
        private WinClient mUIMagicMemoGUIClient;
        
        private UICommandInputBoxWindow3 mUICommandInputBoxWindow3;
        
        private UICommandInputBoxWindow4 mUICommandInputBoxWindow4;
        
        private UICommandInputBoxWindow5 mUICommandInputBoxWindow5;
        
        private UICommandInputBoxWindow6 mUICommandInputBoxWindow6;
        
        private UICommandInputBoxWindow7 mUICommandInputBoxWindow7;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow : WinWindow
    {
        
        public UICommandInputBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("MagicMemoGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Today\'s Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("MagicMemoGUI");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UITodayTaskBoxWindow : WinWindow
    {
        
        public UITodayTaskBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "todayTaskBox";
            this.WindowTitles.Add("MagicMemoGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UITodayTaskBoxEdit
        {
            get
            {
                if ((this.mUITodayTaskBoxEdit == null))
                {
                    this.mUITodayTaskBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITodayTaskBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Magic Memo";
                    this.mUITodayTaskBoxEdit.WindowTitles.Add("MagicMemoGUI");
                    #endregion
                }
                return this.mUITodayTaskBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITodayTaskBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAllTaskBoxWindow : WinWindow
    {
        
        public UIAllTaskBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "allTaskBox";
            this.WindowTitles.Add("MagicMemoGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAllTaskBoxEdit
        {
            get
            {
                if ((this.mUIAllTaskBoxEdit == null))
                {
                    this.mUIAllTaskBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAllTaskBoxEdit.WindowTitles.Add("MagicMemoGUI");
                    #endregion
                }
                return this.mUIAllTaskBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAllTaskBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAddedlinefamilydinneWindow : WinWindow
    {
        
        public UIAddedlinefamilydinneWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "successMessageLabel";
            this.WindowTitles.Add("MagicMemoGUI");
            #endregion
        }
        
        #region Properties
        public WinText UIAddedlinefamilydinneText
        {
            get
            {
                if ((this.mUIAddedlinefamilydinneText == null))
                {
                    this.mUIAddedlinefamilydinneText = new WinText(this);
                    #region Search Criteria
                    this.mUIAddedlinefamilydinneText.SearchProperties[WinText.PropertyNames.Name] = "Added line: \"family dinner: Tuesday, 31 Mar 2015 [7-9pm]\"";
                    this.mUIAddedlinefamilydinneText.WindowTitles.Add("MagicMemoGUI");
                    #endregion
                }
                return this.mUIAddedlinefamilydinneText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIAddedlinefamilydinneText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow1 : WinWindow
    {
        
        public UICommandInputBoxWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("MagicMemoGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Today\'s Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("MagicMemoGUI");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow2 : WinWindow
    {
        
        public UICommandInputBoxWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("MagicMemoGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Today\'s Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("MagicMemoGUI");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow3 : WinWindow
    {
        
        public UICommandInputBoxWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("MagicMemoGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Today\'s Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("MagicMemoGUI");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow4 : WinWindow
    {
        
        public UICommandInputBoxWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("MagicMemoGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Today\'s Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("MagicMemoGUI");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow5 : WinWindow
    {
        
        public UICommandInputBoxWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("MagicMemoGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Today\'s Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("MagicMemoGUI");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow6 : WinWindow
    {
        
        public UICommandInputBoxWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("MagicMemoGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Today\'s Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("MagicMemoGUI");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICommandInputBoxWindow7 : WinWindow
    {
        
        public UICommandInputBoxWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "commandInputBox";
            this.WindowTitles.Add("MagicMemoGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UICommandInputBoxEdit
        {
            get
            {
                if ((this.mUICommandInputBoxEdit == null))
                {
                    this.mUICommandInputBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICommandInputBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Today\'s Tasks";
                    this.mUICommandInputBoxEdit.WindowTitles.Add("MagicMemoGUI");
                    #endregion
                }
                return this.mUICommandInputBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICommandInputBoxEdit;
        #endregion
    }
}
